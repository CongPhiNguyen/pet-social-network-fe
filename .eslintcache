[{"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\index.js":"1","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\reportWebVitals.js":"2","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\App.js":"3","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\store.js":"4","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\index.js":"5","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\routers\\index.js":"6","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\themeReducer.js":"7","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\alertReducer.js":"8","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\postReducer.js":"9","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\authReducer.js":"10","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\modalReducer.js":"11","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\statusReducer.js":"12","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\discoverReducer.js":"13","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\detailPostReducer.js":"14","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\suggestionsReducer.js":"15","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\notifyReducer.js":"16","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\onlineReducer.js":"17","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\messageReducer.js":"18","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\socketReducer.js":"19","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\peerReducer.js":"20","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\callReducer.js":"21","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\profileReducer.js":"22","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\SocketClient.js":"23","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\postAction.js":"24","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\suggestionsAction.js":"25","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\notifyAction.js":"26","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\routers\\router.js":"27","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\discoverAction.js":"28","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\messageAction.js":"29","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\header\\Header.js":"30","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\CallModal.js":"31","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\authAction.js":"32","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\globalTypes.js":"33","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\notFound.js":"34","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\profileAction.js":"35","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\message\\[id].js":"36","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\header\\Search.js":"37","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\home.js":"38","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\login.js":"39","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\register.js":"40","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\utils\\imageUpload.js":"41","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\utils\\fetchData.js":"42","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\admin\\Admin.js":"43","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\header\\Menu.js":"44","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\Avatar.js":"45","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\post\\PostPage.js":"46","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\notification\\NotificationPage.js":"47","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\setting\\Setting.js":"48","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\Profile.js":"49","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\message\\index.js":"50","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\BotMessage.js":"51","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\RightSide.js":"52","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\LeftSide.js":"53","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\UserCard.js":"54","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\Status.js":"55","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\RightSideBar.js":"56","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\PostCard.js":"57","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\api\\authen.js":"58","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\Posts.js":"59","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\NotifyModal.js":"60","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\navigation\\LeftNavigation.js":"61","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\common\\PageSection.js":"62","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\admin\\Log\\LogTable.js":"63","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\admin\\User\\TableUser.js":"64","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\common\\PageHeader.js":"65","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\ImageAlbum.js":"66","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\setting\\TwoFactorAuthen\\TwoFactor.js":"67","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Following.js":"68","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Info.js":"69","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\BotCard.js":"70","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\InputComment.js":"71","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\Comments.js":"72","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\bot\\ChatBot.js":"73","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\LoadMoreBtn.js":"74","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\post_card\\CardFooter.js":"75","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\post_card\\CardBody.js":"76","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\service\\axios.js":"77","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\api\\user.js":"78","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\EditProfile.js":"79","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\setting\\TwoFactorAuthen\\TwoFactorConfigModal.js":"80","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Saved.js":"81","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\FollowBtn.js":"82","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Follower.js":"83","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Posts.js":"84","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\pet\\PetProfile.js":"85","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\api\\log.js":"86","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\utils\\mediaShow.js":"87","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\MsgDisplay.js":"88","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\Icons.js":"89","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\post_card\\CardHeader.js":"90","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\comments\\CommentDisplay.js":"91","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\PostThumb.js":"92","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\Times.js":"93","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\pet\\PetModalAdd.js":"94","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\pet\\PetCard.js":"95","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\utils\\config.js":"96","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\api\\pet.js":"97","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\comments\\CommentCard.js":"98","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\commentAction.js":"99","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\comments\\CommentMenu.js":"100","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\LikeButton.js":"101","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\ShareModal.js":"102","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\chatGpt.js":"103","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\gpt\\gpt.js":"104","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\StatusModal.js":"105"},{"size":388,"mtime":1684252613021,"results":"106","hashOfConfig":"107"},{"size":375,"mtime":1677598258211,"results":"108","hashOfConfig":"107"},{"size":470,"mtime":1684252613005,"results":"109","hashOfConfig":"107"},{"size":512,"mtime":1677598258210,"results":"110","hashOfConfig":"107"},{"size":912,"mtime":1677598258205,"results":"111","hashOfConfig":"107"},{"size":4627,"mtime":1684426314721,"results":"112","hashOfConfig":"107"},{"size":326,"mtime":1677598258210,"results":"113","hashOfConfig":"107"},{"size":325,"mtime":1677598258202,"results":"114","hashOfConfig":"107"},{"size":1278,"mtime":1677598258207,"results":"115","hashOfConfig":"107"},{"size":320,"mtime":1677598258203,"results":"116","hashOfConfig":"107"},{"size":326,"mtime":1677598258206,"results":"117","hashOfConfig":"107"},{"size":294,"mtime":1677598258209,"results":"118","hashOfConfig":"107"},{"size":972,"mtime":1677598258204,"results":"119","hashOfConfig":"107"},{"size":468,"mtime":1677598258204,"results":"120","hashOfConfig":"107"},{"size":603,"mtime":1677598258209,"results":"121","hashOfConfig":"107"},{"size":1418,"mtime":1677598258206,"results":"122","hashOfConfig":"107"},{"size":404,"mtime":1677598258207,"results":"123","hashOfConfig":"107"},{"size":3098,"mtime":1677598258205,"results":"124","hashOfConfig":"107"},{"size":291,"mtime":1677598258208,"results":"125","hashOfConfig":"107"},{"size":287,"mtime":1677598258207,"results":"126","hashOfConfig":"107"},{"size":287,"mtime":1677598258203,"results":"127","hashOfConfig":"107"},{"size":1307,"mtime":1684252613049,"results":"128","hashOfConfig":"107"},{"size":5744,"mtime":1684254539268,"results":"129","hashOfConfig":"107"},{"size":6710,"mtime":1681628145382,"results":"130","hashOfConfig":"107"},{"size":690,"mtime":1677598258201,"results":"131","hashOfConfig":"107"},{"size":2238,"mtime":1677598258199,"results":"132","hashOfConfig":"107"},{"size":1539,"mtime":1684252613051,"results":"133","hashOfConfig":"107"},{"size":712,"mtime":1677598258198,"results":"134","hashOfConfig":"107"},{"size":3792,"mtime":1681628145380,"results":"135","hashOfConfig":"107"},{"size":1308,"mtime":1677813429025,"results":"136","hashOfConfig":"107"},{"size":8472,"mtime":1683732006380,"results":"137","hashOfConfig":"107"},{"size":1700,"mtime":1684253896423,"results":"138","hashOfConfig":"107"},{"size":491,"mtime":1684252613047,"results":"139","hashOfConfig":"107"},{"size":325,"mtime":1684252613029,"results":"140","hashOfConfig":"107"},{"size":4923,"mtime":1684252613048,"results":"141","hashOfConfig":"107"},{"size":1311,"mtime":1684256919668,"results":"142","hashOfConfig":"107"},{"size":2387,"mtime":1677812487609,"results":"143","hashOfConfig":"107"},{"size":1665,"mtime":1684252613028,"results":"144","hashOfConfig":"107"},{"size":4389,"mtime":1684252613029,"results":"145","hashOfConfig":"107"},{"size":6203,"mtime":1684252613040,"results":"146","hashOfConfig":"107"},{"size":995,"mtime":1684252613056,"results":"147","hashOfConfig":"107"},{"size":890,"mtime":1684252613055,"results":"148","hashOfConfig":"107"},{"size":2461,"mtime":1684252613022,"results":"149","hashOfConfig":"107"},{"size":4929,"mtime":1684252613012,"results":"150","hashOfConfig":"107"},{"size":362,"mtime":1684252613007,"results":"151","hashOfConfig":"107"},{"size":1332,"mtime":1684252613031,"results":"152","hashOfConfig":"107"},{"size":2985,"mtime":1684252613030,"results":"153","hashOfConfig":"107"},{"size":1527,"mtime":1684252613041,"results":"154","hashOfConfig":"107"},{"size":1522,"mtime":1684252613032,"results":"155","hashOfConfig":"107"},{"size":1603,"mtime":1684256883528,"results":"156","hashOfConfig":"107"},{"size":221,"mtime":1684254943984,"results":"157","hashOfConfig":"107"},{"size":8810,"mtime":1684255083026,"results":"158","hashOfConfig":"107"},{"size":5373,"mtime":1684252613015,"results":"159","hashOfConfig":"107"},{"size":2667,"mtime":1684252613011,"results":"160","hashOfConfig":"107"},{"size":1219,"mtime":1677816000362,"results":"161","hashOfConfig":"107"},{"size":1883,"mtime":1681229827493,"results":"162","hashOfConfig":"107"},{"size":1514,"mtime":1680420595629,"results":"163","hashOfConfig":"107"},{"size":325,"mtime":1681628145346,"results":"164","hashOfConfig":"107"},{"size":1280,"mtime":1684252613013,"results":"165","hashOfConfig":"107"},{"size":4063,"mtime":1684252613009,"results":"166","hashOfConfig":"107"},{"size":1549,"mtime":1684252613018,"results":"167","hashOfConfig":"107"},{"size":153,"mtime":1681628145351,"results":"168","hashOfConfig":"107"},{"size":1567,"mtime":1684252613023,"results":"169","hashOfConfig":"107"},{"size":1093,"mtime":1684252613023,"results":"170","hashOfConfig":"107"},{"size":598,"mtime":1684252613012,"results":"171","hashOfConfig":"107"},{"size":1503,"mtime":1684252613034,"results":"172","hashOfConfig":"107"},{"size":3271,"mtime":1684252613042,"results":"173","hashOfConfig":"107"},{"size":2912,"mtime":1684252613034,"results":"174","hashOfConfig":"107"},{"size":3342,"mtime":1684252613035,"results":"175","hashOfConfig":"107"},{"size":343,"mtime":1681628145357,"results":"176","hashOfConfig":"107"},{"size":1888,"mtime":1680420624455,"results":"177","hashOfConfig":"107"},{"size":1617,"mtime":1680419165365,"results":"178","hashOfConfig":"107"},{"size":1714,"mtime":1684252613017,"results":"179","hashOfConfig":"107"},{"size":444,"mtime":1677598258167,"results":"180","hashOfConfig":"107"},{"size":3259,"mtime":1681628145355,"results":"181","hashOfConfig":"107"},{"size":2636,"mtime":1684252613014,"results":"182","hashOfConfig":"107"},{"size":306,"mtime":1684252613052,"results":"183","hashOfConfig":"107"},{"size":659,"mtime":1684252613006,"results":"184","hashOfConfig":"107"},{"size":6806,"mtime":1684252613033,"results":"185","hashOfConfig":"107"},{"size":3583,"mtime":1684252613043,"results":"186","hashOfConfig":"107"},{"size":1609,"mtime":1684252613036,"results":"187","hashOfConfig":"107"},{"size":1373,"mtime":1684252613008,"results":"188","hashOfConfig":"107"},{"size":2631,"mtime":1684252613033,"results":"189","hashOfConfig":"107"},{"size":1454,"mtime":1684252613036,"results":"190","hashOfConfig":"107"},{"size":1582,"mtime":1684252613038,"results":"191","hashOfConfig":"107"},{"size":106,"mtime":1684252613005,"results":"192","hashOfConfig":"107"},{"size":427,"mtime":1677812623093,"results":"193","hashOfConfig":"107"},{"size":3396,"mtime":1684254967304,"results":"194","hashOfConfig":"107"},{"size":1311,"mtime":1677812623082,"results":"195","hashOfConfig":"107"},{"size":4135,"mtime":1684252613015,"results":"196","hashOfConfig":"107"},{"size":1782,"mtime":1680419290552,"results":"197","hashOfConfig":"107"},{"size":1282,"mtime":1684252613009,"results":"198","hashOfConfig":"107"},{"size":897,"mtime":1677598258182,"results":"199","hashOfConfig":"107"},{"size":6782,"mtime":1684252613038,"results":"200","hashOfConfig":"107"},{"size":438,"mtime":1684252613037,"results":"201","hashOfConfig":"107"},{"size":63,"mtime":1677598258218,"results":"202","hashOfConfig":"107"},{"size":116,"mtime":1684252613006,"results":"203","hashOfConfig":"107"},{"size":5769,"mtime":1681628145354,"results":"204","hashOfConfig":"107"},{"size":4450,"mtime":1681628145379,"results":"205","hashOfConfig":"107"},{"size":1811,"mtime":1681628145354,"results":"206","hashOfConfig":"107"},{"size":587,"mtime":1679325952861,"results":"207","hashOfConfig":"107"},{"size":1638,"mtime":1679842647330,"results":"208","hashOfConfig":"107"},{"size":919,"mtime":1684316113162,"results":"209","hashOfConfig":"107"},{"size":12306,"mtime":1684428932276,"results":"210","hashOfConfig":"107"},{"size":9302,"mtime":1684254630774,"results":"211","hashOfConfig":"107"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"ject64",{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"214"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"214"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"214"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"214"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"214"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"214"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"214"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"214"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"214"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"214"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"214"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"214"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"214"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"214"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"214"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"214"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"214"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"214"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"214"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"214"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"214"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"214"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"214"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"214"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"214"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"214"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"214"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"214"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\index.js",[],["452","453"],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\reportWebVitals.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\App.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\store.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\index.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\routers\\index.js",["454","455","456","457","458","459","460"],"import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport {\r\n  BrowserRouter,\r\n  Navigate,\r\n  Route,\r\n  Router,\r\n  Routes,\r\n  useLocation,\r\n  useNavigate,\r\n  useRoutes\r\n} from \"react-router-dom\"\r\nimport routes from \"./router\"\r\nimport { useSelector } from \"react-redux\"\r\nimport io from \"socket.io-client\"\r\nimport { refreshToken } from \"../redux/actions/authAction\"\r\nimport { GLOBALTYPES } from \"../redux/actions/globalTypes\"\r\nimport { getPosts } from \"../redux/actions/postAction\"\r\nimport { getSuggestions } from \"../redux/actions/suggestionsAction\"\r\nimport { getNotifies } from \"../redux/actions/notifyAction\"\r\nimport SocketClient from \"../SocketClient\"\r\nimport CallModal from \"../components/message/CallModal\"\r\nimport HeaderLayout from \"../components/header/Header\"\r\nimport NotFoundPage from \"../pages/notFound\"\r\nimport Peer from \"peerjs\"\r\nimport ChatGpt from \"../pages/chatGpt\"\r\nimport StatusModal from \"../components/StatusModal\"\r\n// import { setCurrentUserInfo, handleLogin } from \"../features/authen/authenSlice\"\r\nconst CustomRouters = () => {\r\n  const { auth, status, modal, call } = useSelector((state) => state)\r\n  const role = useSelector((state) => state.auth?.user?.role)\r\n  const dispatch = useDispatch()\r\n  const location = useLocation()\r\n  const [isAdminRoute, setIsAdminRoute] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsAdminRoute(location.pathname.startsWith(\"/admin\"))\r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshToken())\r\n    const socket = io()\r\n    dispatch({ type: GLOBALTYPES.SOCKET, payload: socket })\r\n    return () => socket.close()\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (auth.token) {\r\n      dispatch(getPosts(auth.token))\r\n      dispatch(getSuggestions(auth.token))\r\n      dispatch(getNotifies(auth.token))\r\n    }\r\n  }, [dispatch, auth.token])\r\n\r\n  useEffect(() => {\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notification\")\r\n    } else if (Notification.permission === \"granted\") {\r\n    } else if (Notification.permission !== \"denied\") {\r\n      Notification.requestPermission().then(function (permission) {\r\n        if (permission === \"granted\") {\r\n        }\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const newPeer = new Peer(undefined, {\r\n      path: \"/\",\r\n\r\n      secure: true\r\n    })\r\n\r\n    dispatch({ type: GLOBALTYPES.PEER, payload: newPeer })\r\n  }, [dispatch])\r\n  // useEffect(() => {\r\n  //   axios.get(URL.URL_REFRESH)\r\n  //     .then((data) => {\r\n  //       if (data?.data?.success) {\r\n  //         dispatch(setCurrentUserInfo({ username: data?.data?.username }))\r\n  //         dispatch(handleLogin({ info: data?.data?.data }))\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"err\", err)\r\n  //     })\r\n  // }, [dispatch])\r\n  return (\r\n    <>\r\n      {/* đã đăng nhập */}\r\n      {auth.token && !isAdminRoute && <SocketClient />}\r\n      {auth.token && !isAdminRoute && <HeaderLayout />}\r\n      {auth.token && !isAdminRoute && <ChatGpt />}\r\n      <StatusModal></StatusModal>\r\n      {call && !isAdminRoute && <CallModal />}\r\n      <Routes>\r\n        {!auth.token &&\r\n          routes.publicRoute.map((route, index) => {\r\n            return (\r\n              route.element && (\r\n                <Route\r\n                  key={route.path}\r\n                  path={route.path}\r\n                  element={route.element}\r\n                />\r\n              )\r\n            )\r\n          })}\r\n        {auth.token &&\r\n          routes.protectedRoute.map((route, index) => {\r\n            return (\r\n              route.element && (\r\n                <Route\r\n                  key={route.path}\r\n                  path={route.path}\r\n                  element={route.element}\r\n                />\r\n              )\r\n            )\r\n          })}\r\n        {routes.commonRoute.map((route, index) => {\r\n          return (\r\n            route.element && (\r\n              <Route\r\n                key={route.path}\r\n                path={route.path}\r\n                element={route.element}\r\n              />\r\n            )\r\n          )\r\n        })}\r\n        {auth.token &&\r\n          role === \"admin\" &&\r\n          routes.adminRoute.map((route, index) => {\r\n            return (\r\n              route.element && (\r\n                <Route\r\n                  key={route.path}\r\n                  path={route.path}\r\n                  element={route.element}\r\n                />\r\n              )\r\n            )\r\n          })}\r\n\r\n        <Route path=\"*\" element={<NotFoundPage />} />\r\n      </Routes>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomRouters\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\themeReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\alertReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\postReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\authReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\modalReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\statusReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\discoverReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\detailPostReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\suggestionsReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\notifyReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\onlineReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\messageReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\socketReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\peerReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\callReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\reducers\\profileReducer.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\SocketClient.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\postAction.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\suggestionsAction.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\notifyAction.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\routers\\router.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\discoverAction.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\messageAction.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\header\\Header.js",["461","462"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Menu from './Menu'\r\nimport Search from './Search'\r\nimport { Image } from 'antd'\r\nimport Logo from \"../../images/logo.jpg\"\r\nimport { Breadcrumb, Layout, theme, Row, Col } from 'antd';\r\nconst { Header } = Layout;\r\n\r\nconst HeaderLayout = () => {\r\n    return (\r\n        <Header style={{ display: \"flex\", justifyContent: \"center\", position: \"fixed\", top: 0, left: 0, right: 0, zIndex: 1029 }}>\r\n            <Row style={{ maxWidth: \"1200px\", width: \"100%\" }} >\r\n                <Col xs={2} >\r\n                    <Link to=\"/\" className=\"logo\">\r\n                        <Image\r\n                            className='header-logo'\r\n                            width={50}\r\n                            src={Logo}\r\n                            preview={false}\r\n                            onClick={() => window.scrollTo({ top: 0 })}\r\n                        />\r\n                    </Link>\r\n                </Col>\r\n                <Col style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} xs={10} >\r\n                    <Search />\r\n                </Col>\r\n                <Col xs={12} >\r\n                    <Menu />\r\n                </Col>\r\n            </Row>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderLayout\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\CallModal.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\authAction.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\globalTypes.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\notFound.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\profileAction.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\message\\[id].js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\header\\Search.js",["463","464","465","466","467"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getDataAPI } from '../../utils/fetchData'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { Form, Input, Button, Popover, Result } from 'antd'\r\nimport UserCard from '../UserCard'\r\nimport LoadIcon from '../../images/loading.gif'\r\nimport { message } from 'antd'\r\nconst { Search } = Input\r\n\r\nconst SearchComponent = () => {\r\n    const [search, setSearch] = useState('')\r\n    const [users, setUsers] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const { auth } = useSelector(state => state)\r\n    const [load, setLoad] = useState(false)\r\n\r\n\r\n    const handleSearch = async (e) => {\r\n        if (!search) return;\r\n        try {\r\n            setLoad(true)\r\n            const res = await getDataAPI(`search?username=${search}`, auth.token)\r\n            setUsers(res.data.users)\r\n            setLoad(false)\r\n            setOpen(true)\r\n        } catch (err) {\r\n            message.error(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const handleOpenChange = (newOpen) => {\r\n        setOpen(newOpen);\r\n    };\r\n    const hide = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const content = (\r\n        <div className=\"users\">\r\n            {load && <img className=\"loading\" src={LoadIcon} alt=\"loading\" />}\r\n            {\r\n                search && users.map(user => (\r\n                    <UserCard\r\n                        key={user._id}\r\n                        user={user}\r\n                        handleClose={hide}\r\n                    />\r\n                ))\r\n            }\r\n            {\r\n                !load && users.length === 0 && (\r\n                    <Result\r\n                        status=\"404\"\r\n                        title=\"User not found!\"\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: \"column\" }}>\r\n            <Search size='default' onChange={e => setSearch(e.target.value.toLowerCase().replace(/ /g, ''))} onSearch={handleSearch} placeholder=\"Input name user\" loading={load} />\r\n            <Popover onOpenChange={handleOpenChange} placement=\"bottomLeft\" title={\"Result\"} content={content} trigger=\"click\" open={open}>\r\n            </Popover>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchComponent\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\home.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\login.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\register.js",["468","469","470","471","472","473","474","475","476","477","478","479","480"],"import React, { useState, useEffect } from \"react\"\r\nimport { Col, Row, Button, Form, Input, Typography, Radio, message } from \"antd\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport { registerApi } from \"../api/authen\"\r\nconst { Title } = Typography\r\n\r\nconst Register = () => {\r\n  const initialState = {\r\n    fullname: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cf_password: \"\",\r\n    gender: \"male\"\r\n  }\r\n\r\n  const { auth, alert } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const [userData, setUserData] = useState(initialState)\r\n  const { fullname, username, email, password, cf_password } = userData\r\n  const [typePass, setTypePass] = useState(false)\r\n  const [typeCfPass, setTypeCfPass] = useState(false)\r\n  const [form] = Form.useForm()\r\n\r\n  // Init\r\n  useEffect(() => {\r\n    form.setFieldValue(\"gender\", \"male\")\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (auth.token) navigate(\"/\")\r\n  }, [auth.token, navigate])\r\n\r\n  // const onFinish = (values) => {\r\n  //   const { email, password } = values\r\n  //   dispatch(login({ email, password }))\r\n  // }\r\n\r\n  const onFinish = async (values) => {\r\n    const response = await registerApi(values)\r\n    const { data, status } = response\r\n    if (status === 200) {\r\n      message.success(\r\n        \"Create account successfully. Verify email and sign in into your account\"\r\n      )\r\n      navigate(\"/verify/\" + data.user._id)\r\n    }\r\n    if (status === 400) {\r\n      message.error(data.msg)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row style={{ width: \"100vw\" }}>\r\n        <Col style={{ height: \"100vh\" }} xs={0} md={16}>\r\n          <div className=\"login-background\"></div>\r\n        </Col>\r\n        <Col\r\n          className=\"login-form-warpper\"\r\n          style={{ height: \"100vh\" }}\r\n          xs={24}\r\n          md={8}\r\n        >\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true\r\n            }}\r\n            style={{ width: \"100%\" }}\r\n            onFinish={onFinish}\r\n            autoComplete=\"off\"\r\n            size=\"large\"\r\n          >\r\n            <Title level={2}>Register to Pet Love</Title>\r\n            <Form.Item\r\n              label=\"Full Name\"\r\n              name=\"fullname\"\r\n              style={{\r\n                width: \"100%\"\r\n              }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your name!\"\r\n                }\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"User Name\"\r\n              name=\"username\"\r\n              style={{\r\n                width: \"100%\"\r\n              }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your name!\"\r\n                }\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              style={{\r\n                width: \"100%\"\r\n              }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your mail!\"\r\n                },\r\n                {\r\n                  // eslint-disable-next-line\r\n                  pattern: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                  message: \"Malformed!\"\r\n                }\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\"\r\n                },\r\n                {\r\n                  min: 6,\r\n                  message: \"Password at least 6 characters!\"\r\n                }\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Confirm Password\"\r\n              name=\"cf_password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your confirm password!\"\r\n                },\r\n                {\r\n                  min: 6,\r\n                  message: \"Password at least 6 characters!\"\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve()\r\n                    }\r\n                    return Promise.reject(\r\n                      new Error(\r\n                        \"The two passwords that you entered do not match!\"\r\n                      )\r\n                    )\r\n                  }\r\n                })\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item name=\"gender\">\r\n              <Radio.Group onChange={() => {}}>\r\n                <Radio value={\"male\"}>Male</Radio>\r\n                <Radio value={\"female\"}>Female</Radio>\r\n                <Radio value={\"other\"}>Other</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n            <p style={{ marginBottom: \"20px\" }}>\r\n              <Link to=\"/forgot-password\" className=\"forgot-password\">\r\n                Forgot your password?\r\n              </Link>\r\n            </p>\r\n            <Form.Item>\r\n              <Button\r\n                style={{ width: \"100%\" }}\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n            <p style={{ textAlign: \"center\" }} className=\"my-2\">\r\n              Have an account?{\" \"}\r\n              <Link to=\"/\" style={{ color: \"crimson\", fontWeight: \"700\" }}>\r\n                Login\r\n              </Link>\r\n            </p>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\utils\\imageUpload.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\utils\\fetchData.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\admin\\Admin.js",["481","482","483","484","485","486","487","488","489","490","491","492"],"import React, { useState } from \"react\"\r\nimport {\r\n  BulbOutlined,\r\n  DatabaseOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n  RobotOutlined,\r\n  UploadOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  TransactionOutlined,\r\n  CalculatorOutlined,\r\n  BarcodeOutlined,\r\n  FolderOutlined,\r\n  FolderAddTwoTone,\r\n  LogoutOutlined\r\n} from \"@ant-design/icons\"\r\nimport { Layout, Menu, Card, Typography, Button } from \"antd\"\r\nimport TableUser from \"./User/TableUser\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport LogTable from \"./Log/LogTable\"\r\n\r\nconst { Header, Sider, Content } = Layout\r\n\r\nexport default function Admin() {\r\n  const navigate = useNavigate()\r\n  const [collapsed, setCollapsed] = useState(false)\r\n  const [key, setCurrentKey] = useState(\"1\")\r\n\r\n  const pageNavigate = (key) => {\r\n    if (key === \"1\") {\r\n      return (\r\n        <div>\r\n          <TableUser />\r\n        </div>\r\n      )\r\n    } else if (key === \"2\") {\r\n      return (\r\n        <div>\r\n          <LogTable />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <Layout style={{ height: \"800px\" }}>\r\n      <Sider theme=\"light\" trigger={null} collapsible collapsed={collapsed}>\r\n        <div style={{ margin: \"20px\" }}>\r\n          <Typography.Title level={3}>Admin page</Typography.Title>\r\n        </div>\r\n        <Menu\r\n          theme=\"light\"\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={[\"1\"]}\r\n          onSelect={(val) => {\r\n            setCurrentKey(val.key)\r\n          }}\r\n          items={[\r\n            {\r\n              key: \"1\",\r\n              icon: <UserOutlined />,\r\n              label: \"User\"\r\n            },\r\n            {\r\n              key: \"2\",\r\n              icon: <LogoutOutlined />,\r\n              label: \"Log\"\r\n            }\r\n          ]}\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            navigate(-1)\r\n          }}\r\n        >\r\n          Back\r\n        </Button>\r\n      </Sider>\r\n      <Layout className=\"site-layout\" theme=\"light\">\r\n        <Header\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: 0\r\n          }}\r\n        >\r\n          {React.createElement(\r\n            collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger\",\r\n              onClick: () => setCollapsed(!collapsed)\r\n            }\r\n          )}\r\n        </Header>\r\n        <div className=\"p-[40px]\">{pageNavigate(key)}</div>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\header\\Menu.js",["493","494"],"import React, { useState, useMemo } from \"react\"\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Tooltip, Badge, Popover, Divider } from \"antd\"\r\nimport {\r\n  HomeFilled,\r\n  MessageFilled,\r\n  StarFilled,\r\n  BellFilled\r\n} from \"@ant-design/icons\"\r\nimport { Avatar } from \"antd\"\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\"\r\nimport { logout } from \"../../redux/actions/authAction\"\r\nimport NotifyModal from \"../NotifyModal\"\r\n\r\nconst navLinks = [\r\n  {\r\n    label: \"Home\",\r\n    icon: <HomeFilled />,\r\n    path: \"/\"\r\n  },\r\n  {\r\n    label: \"Message\",\r\n    icon: <MessageFilled />,\r\n    path: \"/message\"\r\n  },\r\n  {\r\n    label: \"Discover\",\r\n    icon: <StarFilled />,\r\n    path: \"/discover\"\r\n  }\r\n]\r\n\r\nconst Menu = () => {\r\n  const role = useSelector((state) => state.auth?.user?.role)\r\n  const [open1, setOpen1] = useState(false)\r\n  const { auth, theme, notify } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n  const { pathname } = useLocation()\r\n  const isActive = (pn) => {\r\n    if (pn === pathname) return \"active\"\r\n    return \"\"\r\n  }\r\n\r\n  const [showArrow, setShowArrow] = useState(true)\r\n  const [arrowAtCenter, setArrowAtCenter] = useState(false)\r\n\r\n  const mergedArrow = useMemo(() => {\r\n    if (arrowAtCenter) return { arrowPointAtCenter: true }\r\n    return showArrow\r\n  }, [showArrow, arrowAtCenter])\r\n\r\n  const handleOpenChange1 = (newOpen) => {\r\n    setOpen1(newOpen)\r\n  }\r\n  const content = (\r\n    <div aria-labelledby=\"navbarDropdown\">\r\n      <Link\r\n        style={{ fontWeight: \"600\" }}\r\n        className=\"dropdown-item\"\r\n        to={`/profile/${auth.user._id}`}\r\n      >\r\n        Profile\r\n      </Link>\r\n      <label\r\n        style={{ fontWeight: \"600\" }}\r\n        htmlFor=\"theme\"\r\n        className=\"dropdown-item\"\r\n        onClick={() =>\r\n          dispatch({\r\n            type: GLOBALTYPES.THEME,\r\n            payload: !theme\r\n          })\r\n        }\r\n      >\r\n        {theme ? \"Light mode\" : \"Dark mode\"}\r\n      </label>\r\n      <Link\r\n        style={{ fontWeight: \"600\" }}\r\n        className=\"dropdown-item\"\r\n        to=\"/setting\"\r\n      >\r\n        Setting\r\n      </Link>\r\n      {role === \"admin\" && (\r\n        <Link\r\n          style={{ fontWeight: \"600\" }}\r\n          className=\"dropdown-item\"\r\n          to=\"/admin\"\r\n        >\r\n          Admin\r\n        </Link>\r\n      )}\r\n\r\n      <Divider style={{ margin: 0 }} />\r\n\r\n      <Link\r\n        style={{ fontWeight: \"600\" }}\r\n        className=\"dropdown-item\"\r\n        to=\"/\"\r\n        onClick={() => dispatch(logout())}\r\n      >\r\n        Logout\r\n      </Link>\r\n    </div>\r\n  )\r\n  const [open, setOpen] = useState(false)\r\n  const handleOpenChange = (newOpen) => {\r\n    setOpen(newOpen)\r\n  }\r\n  return (\r\n    <div className=\"menu\">\r\n      {navLinks.map((link, index) => (\r\n        <Link\r\n          key={index}\r\n          className={`nav-link${isActive(link.path)}`}\r\n          to={link.path}\r\n        >\r\n          <span className=\"material-icons\">\r\n            <Tooltip placement=\"bottom\" title={link.label} arrow={mergedArrow}>\r\n              {link.icon}\r\n            </Tooltip>\r\n          </span>\r\n        </Link>\r\n      ))}\r\n      <div style={{ position: \"relative\" }}>\r\n        <Link onClick={handleOpenChange1} className={`nav-link`}>\r\n          <span className=\"material-icons\">\r\n            <Badge count={notify.data.length}>\r\n              <BellFilled className=\"icon\" />\r\n            </Badge>\r\n          </span>\r\n        </Link>\r\n        <div style={{ position: \"absolute\", bottom: 20, right: 15 }}>\r\n          <Popover\r\n            className=\"popover-notify\"\r\n            onOpenChange={handleOpenChange1}\r\n            placement=\"bottomRight\"\r\n            content={<NotifyModal />}\r\n            trigger=\"click\"\r\n            open={open1}\r\n          ></Popover>\r\n        </div>\r\n      </div>\r\n      <div style={{ position: \"relative\" }}>\r\n        <Link onClick={handleOpenChange} className={`nav-link`}>\r\n          <span className=\"material-icons\">\r\n            <Avatar\r\n              style={{\r\n                backgroundColor: \"#f56a00\",\r\n                verticalAlign: \"middle\"\r\n              }}\r\n              src={\r\n                auth.user.avatar ===\r\n                \"https://res.cloudinary.com/devatchannel/image/upload/v1602752402/avatar/avatar_cugq40.png\"\r\n                  ? null\r\n                  : auth.user.avatar\r\n              }\r\n              size=\"default\"\r\n            >\r\n              {auth.user.username[0].toUpperCase()}\r\n            </Avatar>\r\n          </span>\r\n        </Link>\r\n        <div style={{ position: \"absolute\", bottom: 20, right: 15 }}>\r\n          <Popover\r\n            onOpenChange={handleOpenChange}\r\n            placement=\"bottomRight\"\r\n            content={content}\r\n            trigger=\"click\"\r\n            open={open}\r\n          ></Popover>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\Avatar.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\post\\PostPage.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\notification\\NotificationPage.js",["495","496"],"import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Row, Col, Card } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Avatar from \"../../components/Avatar\"\r\nimport moment from \"moment\"\r\nimport LeftNavigation from \"../../components/navigation/LeftNavigation\"\r\n\r\nexport default function NotificationPage() {\r\n  const dispatch = useDispatch()\r\n  const { auth, notify } = useSelector((state) => state)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: 64,\r\n        width: \"100%\",\r\n        maxWidth: \"1200px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n      }}\r\n    >\r\n      <div>\r\n        <Row>\r\n          <Col span={8}>\r\n            <LeftNavigation />\r\n          </Col>\r\n          <Col span={16}>\r\n            <div style={{ marginTop: 17, marginRight: 20 }}>\r\n              <Card>\r\n                <div style={{ overflow: \"auto\" }}>\r\n                  {notify.data.map((msg, index) => (\r\n                    <div key={index} style={{ marginBottom: 20 }}>\r\n                      <Link\r\n                        to={`${msg.url}`}\r\n                        style={{ display: \"flex\", alignItems: \"center\" }}\r\n                        onClick={() => {}}\r\n                      >\r\n                        <Avatar\r\n                          src={msg.user.avatar}\r\n                          size=\"big-avatar\"\r\n                          style={{ marginRight: 20 }}\r\n                        />\r\n                        <div style={{ marginLeft: 20 }}>\r\n                          <div style={{ marginRight: 20 }}>\r\n                            <span style={{ fontWeight: 600 }}>\r\n                              {msg.user.username}{\" \"}\r\n                            </span>\r\n                            <span>{msg.text}</span>\r\n                          </div>\r\n                          {msg.content && (\r\n                            <span>{msg.content.slice(0, 20)}...</span>\r\n                          )}\r\n                        </div>\r\n                        {msg.image && (\r\n                          <div style={{ width: \"30px\" }}>\r\n                            {msg.image.match(/video/i) ? (\r\n                              <video src={msg.image} width=\"100%\" />\r\n                            ) : (\r\n                              <Avatar src={msg.image} size=\"medium-avatar\" />\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        <small className=\"text-muted d-flex justify-content-between px-2\">\r\n                          {moment(msg.createdAt).fromNow()}\r\n                        </small>\r\n                        {!msg.isRead && (\r\n                          <i className=\"fas fa-circle text-primary\" />\r\n                        )}\r\n                      </Link>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\setting\\Setting.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\Profile.js",["497","498"],"import React, { useEffect, useState } from \"react\"\r\nimport Info from \"./components/Info\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { getProfileUsers } from \"../../redux/actions/profileAction\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Card, Col, Row } from \"antd\"\r\nimport Following from \"./components/Following\"\r\nimport ImageAlbum from \"./components/ImageAlbum\"\r\n\r\nconst Profile = () => {\r\n  const { profile, auth } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const [saveTab, setSaveTab] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (profile.ids.every((item) => item !== id)) {\r\n      dispatch(getProfileUsers({ id, auth }))\r\n    }\r\n  }, [id, auth, dispatch, profile.ids])\r\n\r\n  return (\r\n    <div className=\"profile\" style={{ marginTop: 64 }}>\r\n      <Info auth={auth} profile={profile} dispatch={dispatch} id={id} />\r\n      <Row\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: 1200,\r\n          margin: \"auto\",\r\n          marginTop: -10,\r\n          padding: \"0px 10px\"\r\n        }}\r\n      >\r\n        <Col span={8}>\r\n          {!profile?.loading && (\r\n            <>\r\n              <Card>\r\n                <Following />\r\n              </Card>\r\n              <div style={{ marginLeft: 20 }}>\r\n                <ImageAlbum isLoading={profile?.loading} />\r\n              </div>\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col span={16}></Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\message\\index.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\BotMessage.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\RightSide.js",["499"],"import React, { useState, useEffect, useRef } from \"react\"\r\nimport UserCard from \"../UserCard\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\nimport MsgDisplay from \"./MsgDisplay\"\r\nimport Icons from \"../Icons\"\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\"\r\nimport { imageShow, videoShow } from \"../../utils/mediaShow\"\r\nimport { imageUpload } from \"../../utils/imageUpload\"\r\nimport {\r\n  addMessage,\r\n  getMessages,\r\n  loadMoreMessages,\r\n  deleteConversation\r\n} from \"../../redux/actions/messageAction\"\r\nimport LoadIcon from \"../../images/loading.gif\"\r\nimport { Button, Spin } from \"antd\"\r\nimport { ExclamationCircleFilled } from \"@ant-design/icons\"\r\nimport { Modal } from \"antd\"\r\n\r\nconst { confirm } = Modal\r\n\r\nconst RightSide = () => {\r\n  const { auth, message, theme, socket, peer } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n\r\n  const { id } = useParams()\r\n  const [user, setUser] = useState([])\r\n  const [text, setText] = useState(\"\")\r\n  const [media, setMedia] = useState([])\r\n  const [loadMedia, setLoadMedia] = useState(false)\r\n\r\n  const refDisplay = useRef()\r\n  const pageEnd = useRef()\r\n\r\n  const [data, setData] = useState([])\r\n  const [result, setResult] = useState(9)\r\n  const [page, setPage] = useState(0)\r\n  const [isLoadMore, setIsLoadMore] = useState(0)\r\n\r\n  const history = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const newData = message.data.find((item) => item._id === id)\r\n    if (newData) {\r\n      setData(newData.messages)\r\n      setResult(newData.result)\r\n      setPage(newData.page)\r\n    }\r\n  }, [message.data, id])\r\n\r\n  useEffect(() => {\r\n    if (id && message.users.length > 0) {\r\n      setTimeout(() => {\r\n        refDisplay.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" })\r\n      }, 50)\r\n\r\n      const newUser = message.users.find((user) => user._id === id)\r\n      if (newUser) setUser(newUser)\r\n    }\r\n  }, [message.users, id])\r\n\r\n  const handleChangeMedia = (e) => {\r\n    const files = [...e.target.files]\r\n    let err = \"\"\r\n    let newMedia = []\r\n\r\n    files.forEach((file) => {\r\n      if (!file) return (err = \"File does not exist.\")\r\n\r\n      if (file.size > 1024 * 1024 * 5) {\r\n        return (err = \"The image/video largest is 5mb.\")\r\n      }\r\n\r\n      return newMedia.push(file)\r\n    })\r\n\r\n    if (err) dispatch({ type: GLOBALTYPES.ALERT, payload: { error: err } })\r\n    setMedia([...media, ...newMedia])\r\n  }\r\n\r\n  const handleDeleteMedia = (index) => {\r\n    const newArr = [...media]\r\n    newArr.splice(index, 1)\r\n    setMedia(newArr)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (!text.trim() && media.length === 0) return\r\n    setText(\"\")\r\n    setMedia([])\r\n    setLoadMedia(true)\r\n\r\n    let newArr = []\r\n    if (media.length > 0) newArr = await imageUpload(media)\r\n\r\n    const msg = {\r\n      sender: auth?.user?._id,\r\n      recipient: id,\r\n      text,\r\n      media: newArr,\r\n      createdAt: new Date().toISOString()\r\n    }\r\n\r\n    setLoadMedia(false)\r\n    await dispatch(addMessage({ msg, auth, socket }))\r\n    if (refDisplay.current) {\r\n      refDisplay.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getMessagesData = async () => {\r\n      if (message.data.every((item) => item._id !== id)) {\r\n        await dispatch(getMessages({ auth, id }))\r\n        setTimeout(() => {\r\n          refDisplay.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"end\"\r\n          })\r\n        }, 50)\r\n      }\r\n    }\r\n    getMessagesData()\r\n  }, [id, dispatch, auth, message.data])\r\n\r\n  // Load More\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setIsLoadMore((p) => p + 1)\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1\r\n      }\r\n    )\r\n\r\n    observer.observe(pageEnd.current)\r\n  }, [setIsLoadMore])\r\n\r\n  useEffect(() => {\r\n    if (isLoadMore > 1) {\r\n      if (result >= page * 9) {\r\n        dispatch(loadMoreMessages({ auth, id, page: page + 1 }))\r\n        setIsLoadMore(1)\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isLoadMore])\r\n\r\n  const handleDeleteConversation = () => {\r\n    confirm({\r\n      icon: <ExclamationCircleFilled />,\r\n      title: \"Do you want to this conversation?\",\r\n      onOk() {\r\n        dispatch(deleteConversation({ auth, id }))\r\n        return history(\"/message\")\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\")\r\n      }\r\n    })\r\n  }\r\n\r\n  // Call\r\n  const caller = ({ video }) => {\r\n    const { _id, avatar, username, fullname } = user\r\n\r\n    const msg = {\r\n      sender: auth?.user?._id,\r\n      recipient: _id,\r\n      avatar,\r\n      username,\r\n      fullname,\r\n      video\r\n    }\r\n\r\n    dispatch({ type: GLOBALTYPES.CALL, payload: msg })\r\n  }\r\n\r\n  const callUser = ({ video }) => {\r\n    const { _id, avatar, username, fullname } = auth.user\r\n\r\n    const msg = {\r\n      sender: _id,\r\n      recipient: user._id,\r\n      avatar,\r\n      username,\r\n      fullname,\r\n      video\r\n    }\r\n    console.log({ peer })\r\n\r\n    if (peer.open) msg.peerId = peer._id\r\n\r\n    socket.emit(\"callUser\", msg)\r\n  }\r\n\r\n  const handleAudioCall = () => {\r\n    caller({ video: false })\r\n    callUser({ video: false })\r\n  }\r\n\r\n  const handleVideoCall = () => {\r\n    caller({ video: true })\r\n    callUser({ video: true })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"message_header\" style={{ cursor: \"pointer\" }}>\r\n        {user.length !== 0 && (\r\n          <UserCard user={user}>\r\n            <div>\r\n              <i className=\"fas fa-phone-alt\" onClick={handleAudioCall} />\r\n\r\n              <i className=\"fas fa-video mx-3\" onClick={handleVideoCall} />\r\n\r\n              <i\r\n                className=\"fas fa-trash text-danger\"\r\n                onClick={handleDeleteConversation}\r\n              />\r\n            </div>\r\n          </UserCard>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className=\"chat_container\"\r\n        style={{ height: media.length > 0 ? \"calc(100% - 180px)\" : \"\" }}\r\n      >\r\n        <div className=\"chat_display\" ref={refDisplay}>\r\n          <button style={{ marginTop: \"-25px\", opacity: 0 }} ref={pageEnd}>\r\n            Load more\r\n          </button>\r\n\r\n          {data.map((msg, index) => (\r\n            <div key={index}>\r\n              {msg.sender !== auth?.user?._id && (\r\n                <div className=\"chat_row other_message\">\r\n                  <MsgDisplay user={user} msg={msg} theme={theme} />\r\n                </div>\r\n              )}\r\n\r\n              {msg.sender === auth?.user?._id && (\r\n                <div className=\"chat_row you_message\">\r\n                  <MsgDisplay\r\n                    user={auth?.user}\r\n                    msg={msg}\r\n                    theme={theme}\r\n                    data={data}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          {loadMedia && (\r\n            <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n              <Spin></Spin>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"show_media\"\r\n        style={{ display: media?.length > 0 ? \"grid\" : \"none\" }}\r\n      >\r\n        {media.map((item, index) => (\r\n          <div key={index} id=\"file_media\">\r\n            {item.type.match(/video/i)\r\n              ? videoShow(URL.createObjectURL(item), theme)\r\n              : imageShow(URL.createObjectURL(item), theme)}\r\n            <span onClick={() => handleDeleteMedia(index)}>&times;</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <form className=\"chat_input\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter you message...\"\r\n          value={text}\r\n          onChange={(e) => setText(e?.target?.value)}\r\n          style={{\r\n            filter: theme ? \"invert(1)\" : \"invert(0)\",\r\n            background: theme ? \"#040404\" : \"\",\r\n            color: theme ? \"white\" : \"\"\r\n          }}\r\n        />\r\n\r\n        <Icons setContent={setText} content={text} theme={theme} />\r\n\r\n        <div className=\"file_upload\">\r\n          <i\r\n            style={{ fontSize: \"1.3rem\", transform: \"translateY(+3px)\" }}\r\n            className=\"fas fa-image \"\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            id=\"file\"\r\n            multiple\r\n            accept=\"image/*,video/*\"\r\n            onChange={handleChangeMedia}\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          style={{ background: \"#6366f1\" }}\r\n          disabled={text || media.length > 0 ? false : true}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n        >\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RightSide\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\LeftSide.js",["500","501","502"],"import React, { useState, useEffect, useRef } from \"react\"\r\nimport UserCard from \"../UserCard\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { getDataAPI } from \"../../utils/fetchData\"\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\"\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\"\r\nimport { MESS_TYPES, getConversations } from \"../../redux/actions/messageAction\"\r\nimport BotCard from \"./BotCard\"\r\nimport {\r\n  Typography,\r\n  Input,\r\n  Modal,\r\n  Button,\r\n  message as mese,\r\n  List,\r\n  Avatar,\r\n  Result,\r\n  Badge\r\n} from \"antd\"\r\nimport { MessageFilled } from \"@ant-design/icons\"\r\nconst { Title } = Typography\r\nconst { Search } = Input\r\n\r\nconst LeftSide = () => {\r\n  const { auth, message, online } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchUsers, setSearchUsers] = useState([])\r\n\r\n  const history = useNavigate()\r\n  const { id } = useParams()\r\n\r\n  const pageEnd = useRef()\r\n  const [page, setPage] = useState(0)\r\n\r\n  const handleSearch = async (e) => {\r\n    if (!search) return setSearchUsers([])\r\n\r\n    try {\r\n      const res = await getDataAPI(`search?username=${search}`, auth.token)\r\n      console.log(res.data.users)\r\n      setSearchUsers(res.data.users)\r\n      setOpen(true)\r\n    } catch (err) {\r\n      mese.error(err.response.data.msg)\r\n    }\r\n  }\r\n\r\n  const handleAddUser = (user) => {\r\n    setSearch(\"\")\r\n    setSearchUsers([])\r\n    dispatch({\r\n      type: MESS_TYPES.ADD_USER,\r\n      payload: { ...user, text: \"\", media: [] }\r\n    })\r\n    dispatch({ type: MESS_TYPES.CHECK_ONLINE_OFFLINE, payload: online })\r\n    setOpen(false)\r\n    return history(`/message/${user._id}`)\r\n  }\r\n\r\n  const isActive = (user) => {\r\n    if (id === user._id) return \"active\"\r\n    return \"\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (message.firstLoad) return\r\n    dispatch(getConversations({ auth }))\r\n  }, [dispatch, auth, message.firstLoad])\r\n\r\n  // Load More\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1)\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1\r\n      }\r\n    )\r\n\r\n    observer.observe(pageEnd.current)\r\n  }, [setPage])\r\n\r\n  useEffect(() => {\r\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n      dispatch(getConversations({ auth, page }))\r\n    }\r\n  }, [message.resultUsers, page, auth, dispatch])\r\n\r\n  // Check User Online - Offline\r\n  useEffect(() => {\r\n    if (message.firstLoad) {\r\n      dispatch({ type: MESS_TYPES.CHECK_ONLINE_OFFLINE, payload: online })\r\n    }\r\n  }, [online, message.firstLoad, dispatch])\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const handleCancel = () => {\r\n    setOpen(false)\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        title=\"List user\"\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n        ]}\r\n      >\r\n        {searchUsers.length === 0 ? (\r\n          <Result status=\"404\" title=\"User not found!\" />\r\n        ) : (\r\n          <List\r\n            className=\"demo-loadmore-list\"\r\n            itemLayout=\"horizontal\"\r\n            dataSource={searchUsers}\r\n            renderItem={(user) => (\r\n              <List.Item\r\n                actions={[\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => handleAddUser(user)}\r\n                    icon={\r\n                      <MessageFilled\r\n                        style={{ transform: \"translateY(-3px)\" }}\r\n                      />\r\n                    }\r\n                  />\r\n                ]}\r\n              >\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Badge status=\"success\" dot={isActive(user)}>\r\n                      <Avatar src={user.avatar} />\r\n                    </Badge>\r\n                  }\r\n                  title={user.fullname}\r\n                  description={user.username}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        )}\r\n      </Modal>\r\n      <Title level={2}>Messager</Title>\r\n      <Search\r\n        style={{ marginBottom: \"16px\" }}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        onSearch={handleSearch}\r\n        size=\"large\"\r\n        placeholder=\"Enter name to search\"\r\n        allowClear\r\n      />\r\n\r\n      <div className=\"message_chat_list\">\r\n        <>\r\n          {message.users.map((user) => (\r\n            <div\r\n              key={user._id}\r\n              className={`message_user ${isActive(user)}`}\r\n              onClick={() => handleAddUser(user)}\r\n            >\r\n              <UserCard user={user} msg={true}>\r\n                {user.online ? (\r\n                  <i className=\"fas fa-circle text-success\" />\r\n                ) : (\r\n                  auth.user.following.find((item) => item._id === user._id) && (\r\n                    <i className=\"fas fa-circle\" />\r\n                  )\r\n                )}\r\n              </UserCard>\r\n            </div>\r\n          ))}\r\n        </>\r\n\r\n        {/* <Link to={`/message/bot`}>\r\n          <BotCard />\r\n        </Link> */}\r\n        <button ref={pageEnd} style={{ opacity: 0 }}>\r\n          Load More\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LeftSide\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\UserCard.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\Status.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\RightSideBar.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\PostCard.js",["503"],"import React from 'react'\r\nimport CardHeader from './home/post_card/CardHeader'\r\nimport CardBody from './home/post_card/CardBody'\r\nimport CardFooter from './home/post_card/CardFooter'\r\n\r\nimport Comments from './home/Comments'\r\nimport InputComment from './home/InputComment'\r\nimport { Avatar, Card } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PostCard = ({ post, theme }) => {\r\n    const { auth } = useSelector(state => state)\r\n\r\n    return (\r\n        <>\r\n            <Card style={{ marginBottom: 20 }}>\r\n                <CardHeader post={post} />\r\n                <CardBody post={post} theme={theme} />\r\n                <CardFooter post={post} />\r\n\r\n                <Comments post={post} />\r\n                <div style={{ borderTop: '1px solid #00000038' }}>\r\n                    <InputComment post={post} >\r\n                        <Avatar style={{\r\n                            backgroundColor: '#f56a00',\r\n                            verticalAlign: 'middle',\r\n                            marginRight: \"5px\",\r\n                            marginRight: \"15px\"\r\n                        }} src={auth?.user?.avatar === 'https://res.cloudinary.com/devatchannel/image/upload/v1602752402/avatar/avatar_cugq40.png' ? null : auth?.user?.avatar} size=\"default\" >\r\n                            {auth?.user?.username[0]?.toUpperCase()}\r\n                        </Avatar>\r\n                    </InputComment>\r\n                </div>\r\n\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostCard\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\api\\authen.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\Posts.js",["504"],"import React, { useEffect, useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport PostCard from \"../PostCard\"\r\n\r\nimport LoadIcon from \"../../images/loading.gif\"\r\nimport LoadMoreBtn from \"../LoadMoreBtn\"\r\nimport { getDataAPI } from \"../../utils/fetchData\"\r\nimport { POST_TYPES } from \"../../redux/actions/postAction\"\r\n\r\nconst Posts = () => {\r\n  const { homePosts, auth, theme } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n\r\n  const [load, setLoad] = useState(false)\r\n\r\n  const handleLoadMore = async () => {\r\n    setLoad(true)\r\n\r\n    const res = await getDataAPI(\r\n      `posts?limit=${homePosts.page * 9}`,\r\n      auth.token\r\n    )\r\n\r\n    dispatch({\r\n      type: POST_TYPES.GET_POSTS,\r\n      payload: { ...res.data, page: homePosts.page + 1 }\r\n    })\r\n\r\n    setLoad(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      {homePosts.posts.map((post) => (\r\n        <PostCard key={post._id} post={post} theme={theme} />\r\n      ))}\r\n\r\n      {load && <img src={LoadIcon} alt=\"loading\" className=\"d-block mx-auto\" />}\r\n\r\n      <LoadMoreBtn\r\n        result={homePosts.result}\r\n        page={homePosts.page}\r\n        load={load}\r\n        handleLoadMore={handleLoadMore}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\NotifyModal.js",["505"],"import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport NoNotice from \"../images/notice.png\"\r\nimport { Link, useHistory, useNavigate } from \"react-router-dom\"\r\nimport Avatar from \"./Avatar\"\r\nimport moment from \"moment\"\r\nimport {\r\n  isReadNotify,\r\n  NOTIFY_TYPES,\r\n  deleteAllNotifies\r\n} from \"../redux/actions/notifyAction\"\r\nimport { Button, Modal } from \"antd\"\r\nimport { DeleteFilled } from \"@ant-design/icons\"\r\n\r\nconst NotifyModal = () => {\r\n  const navigate = useNavigate()\r\n  const { auth, notify } = useSelector((state) => state)\r\n  const [modal, contextHolder] = Modal.useModal()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleIsRead = (msg) => {\r\n    dispatch(isReadNotify({ msg, auth }))\r\n  }\r\n\r\n  const handleSound = () => {\r\n    dispatch({ type: NOTIFY_TYPES.UPDATE_SOUND, payload: !notify.sound })\r\n  }\r\n  const confirm = () => {\r\n    modal.confirm({\r\n      title: \"Confirm\",\r\n      icon: <DeleteFilled />,\r\n      content: `You have ${\r\n        notify.data.filter((item) => item.isRead === false).length\r\n      } unread notices. Are you sure you want to delete all?`,\r\n      okText: \"Delete\",\r\n      cancelText: \"Cancel\",\r\n      onOk: handleDeleteAll\r\n    })\r\n  }\r\n  const handleDeleteAll = () => {\r\n    const newArr = notify.data.filter((item) => item.isRead === false)\r\n    if (newArr.length === 0) return dispatch(deleteAllNotifies(auth.token))\r\n    return dispatch(deleteAllNotifies(auth.token))\r\n  }\r\n\r\n  return (\r\n    <div style={{ minWidth: \"300px\" }}>\r\n      <div className=\"d-flex justify-content-between align-items-center px-3\">\r\n        <h5 style={{ fontWeight: \"700\", fontSize: \"1.4rem\" }}>Notifications</h5>\r\n        {notify.sound ? (\r\n          <i\r\n            className=\"fas fa-bell icon-notify \"\r\n            style={{ fontSize: \"1.4rem\", cursor: \"pointer\" }}\r\n            onClick={handleSound}\r\n          />\r\n        ) : (\r\n          <i\r\n            className=\"fas fa-bell-slash icon-notify\"\r\n            style={{ fontSize: \"1.4rem\", cursor: \"pointer\" }}\r\n            onClick={handleSound}\r\n          />\r\n        )}\r\n      </div>\r\n      <hr className=\"mt-0\" />\r\n      {notify.data.length === 0 && (\r\n        <img src={NoNotice} alt=\"NoNotice\" className=\"w-80\" />\r\n      )}\r\n\r\n      <div style={{ maxHeight: \"calc(100vh - 200px)\", overflow: \"auto\" }}>\r\n        {notify.data.map((msg, index) => (\r\n          <div key={index} className=\"px-2 mb-3\">\r\n            <Link\r\n              to={`${msg.url}`}\r\n              className=\"d-flex text-dark align-items-center\"\r\n              onClick={() => handleIsRead(msg)}\r\n            >\r\n              <Avatar src={msg.user.avatar} size=\"big-avatar\" />\r\n\r\n              <div className=\"mx-1 flex-fill\">\r\n                <div>\r\n                  <strong className=\"mr-1\">{msg.user.username}</strong>\r\n                  <span>{msg.text}</span>\r\n                </div>\r\n                {msg.content && <small>{msg.content.slice(0, 20)}...</small>}\r\n              </div>\r\n\r\n              {msg.image && (\r\n                <div style={{ width: \"30px\" }}>\r\n                  {msg.image.match(/video/i) ? (\r\n                    <video src={msg.image} width=\"100%\" />\r\n                  ) : (\r\n                    <Avatar src={msg.image} size=\"medium-avatar\" />\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Link>\r\n            <small className=\"text-muted d-flex justify-content-between px-2\">\r\n              {moment(msg.createdAt).fromNow()}\r\n              {!msg.isRead && <i className=\"fas fa-circle text-primary\" />}\r\n            </small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <hr className=\"my-1\" />\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Button\r\n          onClick={() => {\r\n            navigate(\"/notification\")\r\n          }}\r\n        >\r\n          Open in window\r\n        </Button>\r\n        <Button type=\"primary\" onClick={confirm} danger>\r\n          Delete All\r\n        </Button>\r\n        {contextHolder}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotifyModal\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\navigation\\LeftNavigation.js",["506","507","508"],"import { Card, Menu } from \"antd\"\r\nimport React, { useState } from \"react\"\r\nimport { SiAuth0 } from \"react-icons/si\"\r\nimport { AiOutlineHome } from \"react-icons/ai\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { RiProfileLine, RiFindReplaceLine } from \"react-icons/ri\"\r\nimport { BiBasket, BiMessage } from \"react-icons/bi\"\r\nexport default function LeftNavigation() {\r\n  const [currentSetting, setCurrentSetting] = useState(\"\")\r\n  const currentUserId = useSelector((state) => state?.auth?.user?._id)\r\n  const onClick = (val) => {\r\n    setCurrentSetting(val.key)\r\n  }\r\n  const items = [\r\n    {\r\n      label: <Link to={`/`}>Home</Link>,\r\n      key: \"home\",\r\n      icon: <AiOutlineHome size={22} />\r\n    },\r\n    {\r\n      label: <Link to={`/profile/${currentUserId}`}>Profile</Link>,\r\n      key: \"profile\",\r\n      icon: <RiProfileLine size={22} />\r\n    },\r\n    {\r\n      label: <Link to={`/find-pet`}>Find losted pet</Link>,\r\n      key: \"find-losted\",\r\n      icon: <RiFindReplaceLine size={22} />\r\n    },\r\n    {\r\n      label: <Link to={`/adopt-pet`}>Adopt pet</Link>,\r\n      key: \"adopt-pet\",\r\n      icon: <BiBasket size={22} />\r\n    },\r\n    {\r\n      label: <Link to={`/chat-bot`}>Chat bot</Link>,\r\n      key: \"chat-bot\",\r\n      icon: <BiMessage size={22} />\r\n    }\r\n  ]\r\n  return (\r\n    <div style={{ marginLeft: 20, marginRight: 40, marginTop: 17 }}>\r\n      <Menu\r\n        onClick={onClick}\r\n        style={{ borderRadius: 10 }}\r\n        mode=\"inline\"\r\n        items={items}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\common\\PageSection.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\admin\\Log\\LogTable.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\admin\\User\\TableUser.js",["509"],"import { Table } from \"antd\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { getAllUserApi } from \"../../../api/user\"\r\n\r\nexport default function TableUser() {\r\n  const [userList, setUserList] = useState([])\r\n  const getAllUser = async () => {\r\n    const response = await getAllUserApi()\r\n    const { data, status } = response\r\n    setUserList(data)\r\n  }\r\n  useEffect(() => {\r\n    getAllUser()\r\n  }, [])\r\n  const columns = [\r\n    {\r\n      title: \"User Id\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\"\r\n    },\r\n    {\r\n      title: \"Full Name\",\r\n      dataIndex: \"fullname\",\r\n      key: \"fullname\"\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      dataIndex: \"username\",\r\n      key: \"username\"\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\"\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"role\",\r\n      key: \"role\"\r\n    },\r\n    {\r\n      title: \"Gender\",\r\n      dataIndex: \"gender\",\r\n      key: \"gender\"\r\n    }\r\n  ]\r\n  return (\r\n    <div style={{ margin: 20 }}>\r\n      <Table columns={columns} dataSource={userList} />\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\common\\PageHeader.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\ImageAlbum.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\setting\\TwoFactorAuthen\\TwoFactor.js",["510","511","512","513"],"import { Button, Typography, Modal } from \"antd\"\r\nimport React, { useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useNavigate } from \"react-router\"\r\nimport axios from \"axios\"\r\nimport TwoFactorConfigModal from \"./TwoFactorConfigModal\"\r\nimport { GLOBALTYPES } from \"../../../redux/actions/globalTypes\"\r\n\r\nexport default function TwoFactor() {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const user = useSelector((state) => state.auth.user)\r\n  const { auth, status, modal, call } = useSelector((state) => state)\r\n  // const store = useStore()\r\n  // const user = store.authUser\r\n  const [secret, setSecret] = useState({\r\n    otpauth_url: \"\",\r\n    base32: \"\"\r\n  })\r\n  const [isOpenModal, setIsOpenModal] = useState(false)\r\n\r\n  const generateQrCode = async ({ userId, email }) => {\r\n    const response = await axios.post(\"api/auth/otp/generate\", {\r\n      userId,\r\n      email\r\n    })\r\n    setSecret(response.data)\r\n    setIsOpenModal(true)\r\n  }\r\n\r\n  const disableTwoFactorAuth = async (userId) => {\r\n    const response = await axios.post(\"api/auth/otp/disable\", {\r\n      userId: userId\r\n    })\r\n    const { status, data } = response\r\n\r\n    if (status === 200) {\r\n      dispatch({\r\n        type: GLOBALTYPES.AUTH,\r\n        payload: { ...auth, user: data.updateUser }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <section className=\"bg-ct-blue-600  min-h-screen pt-10\">\r\n        <div className=\"max-w-4xl p-12 mx-auto bg-ct-dark-100 rounded-md h-[20rem] flex gap-20 justify-center items-start\">\r\n          <div className=\"flex-grow-2\">\r\n            <Typography.Title level={3}>Profile Info</Typography.Title>\r\n            <div>\r\n              <p>\r\n                ID: <i>{user?._id}</i>\r\n              </p>\r\n              <p>\r\n                Name: <i>{user?.fullname}</i>\r\n              </p>\r\n              <p>\r\n                Email: <i>{user?.email}</i>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Typography.Title level={3}>\r\n              Mobile App Authentication (2FA)\r\n            </Typography.Title>\r\n            <p className=\"mb-4\">\r\n              Secure your account with TOTP two-factor authentication.\r\n            </p>\r\n            {user?.otpEnabled ? (\r\n              <Button onClick={() => disableTwoFactorAuth(user?._id)}>\r\n                Disable 2FA\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() =>\r\n                  generateQrCode({ userId: user?._id, email: user?.email })\r\n                }\r\n              >\r\n                Setup 2FA\r\n              </Button>\r\n            )}\r\n            <Modal\r\n              title=\"Two-Factor Authentication (2FA)\"\r\n              open={isOpenModal}\r\n              onOk={() => {\r\n                setIsOpenModal(false)\r\n              }}\r\n              onCancel={() => {\r\n                setIsOpenModal(false)\r\n              }}\r\n            >\r\n              <TwoFactorConfigModal\r\n                {...secret}\r\n                closeModal={() => {\r\n                  setIsOpenModal(false)\r\n                }}\r\n              />\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Following.js",["514","515","516"],"import React, { useEffect, useState } from \"react\"\r\nimport { Avatar, Typography, Card, Divider, Tooltip, Modal, Spin } from \"antd\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { getFollowingApi } from \"../../../api/user\"\r\nimport UserCard from \"../../../components/UserCard\"\r\nimport FollowBtn from \"../../../components/FollowBtn\"\r\nexport default function Following() {\r\n  const { id } = useParams()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [followings, setFollowings] = useState([])\r\n  const [openFollowingModel, setOpenFollowingModel] = useState(false)\r\n  const { auth } = useSelector((state) => state)\r\n  const navigate = useNavigate()\r\n\r\n  const getFollowings = async () => {\r\n    setIsLoading(true)\r\n    const response = await getFollowingApi(id)\r\n    setIsLoading(false)\r\n    const { data, status } = response\r\n    console.log(\"response\", response)\r\n    if (status === 200) setFollowings(data.following)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFollowings()\r\n  }, [id])\r\n\r\n  const handleOk = () => {\r\n    setOpenFollowingModel(false)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setOpenFollowingModel(false)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <Spin />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        title={\"Click to view all followings\"}\r\n        style={{\r\n          cursor: \"pointer\",\r\n          color: \"teal\",\r\n          fontWeight: 600,\r\n          fontSize: 18,\r\n          marginBottom: 10\r\n        }}\r\n        onClick={() => {\r\n          setOpenFollowingModel(true)\r\n        }}\r\n      >\r\n        This user is following:\r\n      </Typography>\r\n      <div>\r\n        {followings && followings.length === 0 && (\r\n          <p>This user don't follow any user</p>\r\n        )}\r\n        {followings &&\r\n          followings.map((val, index) => (\r\n            <Avatar.Group key={index}>\r\n              <Tooltip title={val.fullname} placement=\"top\">\r\n                <Avatar\r\n                  src={val.avatar}\r\n                  size={60}\r\n                  onClick={() => {\r\n                    navigate(\"/profile/\" + val._id)\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n            </Avatar.Group>\r\n          ))}\r\n      </div>\r\n      <Modal\r\n        title={\r\n          <React.Fragment>\r\n            <div\r\n              style={{ textAlign: \"centing\", fontWeight: 600, fontSize: 20 }}\r\n            >\r\n              Followings\r\n            </div>\r\n            <Divider></Divider>\r\n          </React.Fragment>\r\n        }\r\n        open={openFollowingModel}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        {followings.map((user, index) => (\r\n          <UserCard key={index} user={user}>\r\n            {auth?.user?._id !== user?._id && <FollowBtn user={user} />}\r\n          </UserCard>\r\n        ))}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Info.js",["517","518","519","520","521","522","523"],"import React, { useState, useEffect } from \"react\"\r\nimport { Avatar, Typography, Card, Divider, Tooltip, Button, Modal } from \"antd\"\r\nimport { GLOBALTYPES } from \"../../../redux/actions/globalTypes\"\r\nimport FollowBtn from \"../../../components/FollowBtn\"\r\nimport { Row, Col } from \"antd\"\r\nimport Follower from \"./Follower\"\r\nimport PetProfile from \"./pet/PetProfile\"\r\nimport { getUserInfoApi } from \"../../../api/user\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport EditProfile from \"./EditProfile\"\r\nimport { useSelector } from \"react-redux\"\r\nimport \"./scss/Info.scss\"\r\n\r\nconst Info = ({ auth, profile, dispatch }) => {\r\n  const { id } = useParams()\r\n  const [userInfo, setUserInfo] = useState([])\r\n  const currentUser = useSelector((state) => state.auth.user)\r\n  const [isEdit, setIsEdit] = useState(false)\r\n\r\n  const getUserId = async () => {\r\n    const response = await getUserInfoApi(id)\r\n    const { data, status } = response\r\n    setUserInfo(data.user)\r\n  }\r\n  useEffect(() => {\r\n    if (id === currentUser._id) {\r\n      setUserInfo(currentUser)\r\n    } else {\r\n      getUserId()\r\n    }\r\n  }, [id, currentUser])\r\n  return (\r\n    <div className=\"info\">\r\n      <React.Fragment>\r\n        <Card>\r\n          <Row>\r\n            <Col xs={24}>\r\n              <div>\r\n                <img\r\n                  src=\"https://kienthucbonphuong.com/images/202006/pet-la-gi/pet-la-gi.jpg\"\r\n                  alt=\"\"\r\n                  style={{ objectFit: \"cover\", width: \"100%\", height: 200 }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col xs={24} md={12} xl={12}>\r\n              <img\r\n                style={{\r\n                  marginTop: -80,\r\n                  marginLeft: 40,\r\n                  border: \"6px solid #fff\",\r\n                  width: 180,\r\n                  height: 180,\r\n                  objectFit: \"cover\",\r\n                  borderRadius: \"100%\"\r\n                }}\r\n                src={userInfo.avatar}\r\n                alt=\"\"\r\n              ></img>\r\n              <div style={{ marginLeft: 60, marginTop: 20, marginBottom: 10 }}>\r\n                <Typography.Title level={2}>\r\n                  {userInfo.fullname} (@{userInfo?.username})\r\n                </Typography.Title>\r\n                <div>\r\n                  {userInfo?._id === auth?.user?._id ? (\r\n                    <Button\r\n                      onClick={() => {\r\n                        setIsEdit(true)\r\n                      }}\r\n                    >\r\n                      Edit Profile\r\n                    </Button>\r\n                  ) : (\r\n                    <FollowBtn user={userInfo} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div style={{ marginLeft: 60 }}>\r\n                <Typography style={{ fontSize: 16 }}>\r\n                  {userInfo.story}\r\n                </Typography>\r\n                <div style={{ marginTop: 20 }}>\r\n                  <Follower id={id} />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs={24} md={12} xl={12}>\r\n              <div className=\"pet-profile-container\">\r\n                <PetProfile />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n        <EditProfile isEdit={isEdit} setIsEdit={setIsEdit} />\r\n      </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\BotCard.js",[],["524","525"],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\InputComment.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\Comments.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\bot\\ChatBot.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\LoadMoreBtn.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\post_card\\CardFooter.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\post_card\\CardBody.js",["526"],"import React, { useEffect, useState } from \"react\"\r\nimport { Image, Carousel } from \"antd\"\r\nimport { ImLocation2 } from \"react-icons/im\"\r\n\r\nconst CardBody = ({ post, theme }) => {\r\n  const [readMore, setReadMore] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  return (\r\n    <div className=\"card_body\">\r\n      <div\r\n        className=\"card_body-content\"\r\n        style={{\r\n          filter: theme ? \"invert(1)\" : \"invert(0)\",\r\n          color: theme ? \"white\" : \"#111\"\r\n        }}\r\n      >\r\n        <span>\r\n          {post.content.length < 60\r\n            ? post.content\r\n            : readMore\r\n            ? post.content + \" \"\r\n            : post.content.slice(0, 60) + \".....\"}\r\n        </span>\r\n        {post.content.length > 60 && (\r\n          <span className=\"readMore\" onClick={() => setReadMore(!readMore)}>\r\n            {readMore ? \"Hide away\" : \"See more\"}\r\n          </span>\r\n        )}\r\n        <div style={{ display: \"flex\", marginTop: \"5px\" }}>\r\n          <div style={{ width: \"20px\" }}>\r\n            <ImLocation2\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                color: \"#0000007a\",\r\n                transform: \"translateY(-3px)\"\r\n              }}\r\n            ></ImLocation2>\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontWeight: \"500\",\r\n              fontSize: \".7rem\",\r\n              color: \"#0000007a\",\r\n              fontStyle: \"italic\"\r\n            }}\r\n          >\r\n            {post.location}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {post.images.length > 0 && (\r\n        <>\r\n          <Carousel autoplay dots>\r\n            {post.images.map((image) => (\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Image\r\n                  preview={{\r\n                    visible: false\r\n                  }}\r\n                  height={300}\r\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  src={image.url}\r\n                  onClick={() => setVisible(true)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Carousel>\r\n          <div\r\n            style={{\r\n              display: \"none\"\r\n            }}\r\n          >\r\n            <Image.PreviewGroup\r\n              preview={{\r\n                visible,\r\n                onVisibleChange: (vis) => setVisible(vis)\r\n              }}\r\n            >\r\n              {post.images.map((image) => (\r\n                <Image src={image.url} />\r\n              ))}\r\n            </Image.PreviewGroup>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardBody\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\service\\axios.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\api\\user.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\EditProfile.js",["527","528"],"import React, { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { checkImage } from \"../../../utils/imageUpload\"\r\nimport { Form, Input, Radio, Select, Modal, Button, message } from \"antd\"\r\nimport { AiFillCamera } from \"react-icons/ai\"\r\nimport { updateProfileApi, uploadImageApi } from \"../../../api/user\"\r\nimport { GLOBALTYPES } from \"../../../redux/actions/globalTypes\"\r\nconst EditProfile = ({ isEdit, setIsEdit }) => {\r\n  const dispatch = useDispatch()\r\n  const userInfo = useSelector((state) => state.auth.user)\r\n  const auth = useSelector((state) => state.auth)\r\n  const [form] = Form.useForm()\r\n  const [avatar, setAvatar] = useState(\"\")\r\n  const [showConfirmCloseEditModel, setShowConfirmCloseEditModal] =\r\n    useState(false)\r\n  const [isSendingEditInfo, setIsSendingEditInfo] = useState(false)\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ ...userInfo })\r\n  }, [])\r\n\r\n  const changeAvatar = (e) => {\r\n    const file = e.target.files[0]\r\n    const err = checkImage(file)\r\n    if (!err) setAvatar(file)\r\n  }\r\n\r\n  const editProfile = async (value) => {\r\n    // Validate các value ở đây\r\n    if (value?.fullname?.length <= 6 || value?.fullname?.length >= 200) {\r\n      message.error(\r\n        \"Full name must have more than 6 characters and less than 200 characters\"\r\n      )\r\n      return\r\n    }\r\n    if (value?.story?.length <= 6 || value?.story?.length >= 200) {\r\n      message.error(\r\n        \"Story must have more than 6 characters and less than 200 characters\"\r\n      )\r\n      return\r\n    }\r\n    let profileInfo = value\r\n    setIsSendingEditInfo(true)\r\n    if (avatar !== \"\") {\r\n      // Upload avatar\r\n      const formData = new FormData()\r\n      formData.append(\"file\", avatar)\r\n      formData.append(\"upload_preset\", \"qqqhcaa3\")\r\n      formData.append(\"cloud_name\", \"databaseimg\")\r\n      const response = await uploadImageApi(formData)\r\n      let avatarUrl = response.data.url\r\n      profileInfo = {\r\n        ...value,\r\n        avatar: avatarUrl\r\n      }\r\n    }\r\n\r\n    const response2 = await updateProfileApi(userInfo._id, profileInfo)\r\n    const { data, status } = response2\r\n    if (status === 200) {\r\n      message.success(\"Update profile user ok!\")\r\n      // Cập nhật redux ở đây\r\n      dispatch({\r\n        type: GLOBALTYPES.AUTH,\r\n        payload: {\r\n          ...auth,\r\n          user: {\r\n            ...auth.user,\r\n            ...data.updateVal\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      message.error(\"Đã có lỗi xảy ra\")\r\n    }\r\n    setIsEdit(false)\r\n    setIsSendingEditInfo(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"Confirm modal\"\r\n        open={showConfirmCloseEditModel}\r\n        onOk={() => {\r\n          setShowConfirmCloseEditModal(false)\r\n          setIsEdit(false)\r\n        }}\r\n        onCancel={() => {\r\n          setShowConfirmCloseEditModal(false)\r\n        }}\r\n        width={400}\r\n        maskClosable={false}\r\n        style={{ top: 20 }}\r\n      >\r\n        Do you want to discard change ?\r\n      </Modal>\r\n      <Modal\r\n        title=\"Change user profile\"\r\n        open={isEdit}\r\n        maskClosable={false}\r\n        onOk={() => {\r\n          setIsEdit(false)\r\n        }}\r\n        onCancel={() => {\r\n          setIsEdit(false)\r\n        }}\r\n        footer={\r\n          <div>\r\n            <Button onClick={() => setShowConfirmCloseEditModal(true)}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => form.submit()}\r\n              loading={isSendingEditInfo}\r\n            >\r\n              OK\r\n            </Button>\r\n          </div>\r\n        }\r\n      >\r\n        <Form\r\n          form={form}\r\n          labelCol={{\r\n            span: 4\r\n          }}\r\n          onFinish={(value) => editProfile(value)}\r\n        >\r\n          {/* Change avatar */}\r\n          <div\r\n            style={{\r\n              width: 150,\r\n              height: 150,\r\n              overflow: \"hidden\",\r\n              borderRadius: \"50%\",\r\n              position: \"relative\",\r\n              margin: \"15px auto\",\r\n              border: \"1px solid #ddd\",\r\n              cursor: \"pointer\",\r\n              textAlign: \"center\",\r\n              marginBottom: 20\r\n            }}\r\n          >\r\n            <img\r\n              src={avatar ? URL.createObjectURL(avatar) : userInfo.avatar}\r\n              alt=\"avatar\"\r\n              style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n            />\r\n            <div>\r\n              <span\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  position: \"absolute\",\r\n                  bottom: -10,\r\n                  left: 50,\r\n                  color: \"#fff\"\r\n                }}\r\n              >\r\n                <label htmlFor=\"file_up\">\r\n                  <AiFillCamera size={20} color=\"#fff\" />\r\n                  <p>Change</p>\r\n                </label>\r\n                <input\r\n                  style={{ display: \"none\" }}\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  id=\"file_up\"\r\n                  accept=\"image/*\"\r\n                  onChange={changeAvatar}\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <Form.Item\r\n            style={{ marginBottom: 10, marginTop: 30 }}\r\n            label=\"Email\"\r\n            name=\"email\"\r\n          >\r\n            <Input readOnly disabled />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n            <Input readOnly disabled />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Full name\"\r\n            name=\"fullname\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Full name!\" }\r\n            ]}\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n            <Input showCount />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Story\"\r\n            name=\"story\"\r\n            rules={[{ required: true, message: \"Please input your story!\" }]}\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Gender\"\r\n            name=\"gender\"\r\n            rules={[{ required: true, message: \"Please input your gender!\" }]}\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n            <Radio.Group>\r\n              <Radio value={\"male\"}>Male</Radio>\r\n              <Radio value={\"female\"}>Female</Radio>\r\n              <Radio value={\"other\"}>Other</Radio>\r\n            </Radio.Group>\r\n            {/* <Input readOnly /> */}\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditProfile\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\setting\\TwoFactorAuthen\\TwoFactorConfigModal.js",["529","530","531","532","533","534","535","536","537","538","539"],"import { FC, useEffect, useState } from \"react\"\r\nimport QRCode from \"qrcode\"\r\nimport { Typography, Form, Input, Button, message } from \"antd\"\r\nimport \"./TwoFactorConfigModal.scss\"\r\nimport axios from \"axios\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { GLOBALTYPES } from \"../../../redux/actions/globalTypes\"\r\n\r\nexport default function TwoFactorConfigModal(props) {\r\n  const dispatch = useDispatch()\r\n  const { auth, status, modal, call } = useSelector((state) => state)\r\n  const [qrcodeUrl, setqrCodeUrl] = useState(\"\")\r\n  const [errors, setErrors] = useState(\"\")\r\n  const [form] = Form.useForm()\r\n  const user = useSelector((state) => state.auth.user)\r\n  const verifyOtp = async (token) => {\r\n    try {\r\n      const response = await axios.post(\"api/auth/otp/verify\", {\r\n        token,\r\n        userId: user._id\r\n      })\r\n      message.success(\"Two-Factor Auth Enabled Successfully\")\r\n      props.closeModal()\r\n      const { status, data } = response\r\n      if (status === 200) {\r\n        dispatch({\r\n          type: GLOBALTYPES.AUTH,\r\n          payload: { ...auth, user: data.user }\r\n        })\r\n      }\r\n    } catch (error) {\r\n      const resMessage =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.response.data.detail ||\r\n        error.message ||\r\n        error.toString()\r\n      message.error(resMessage)\r\n    }\r\n  }\r\n\r\n  const onSubmitHandler = (values) => {\r\n    // verifyOtp(values.token)\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    verifyOtp(values.token)\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      QRCode.toDataURL(props.otpauth_url).then(setqrCodeUrl)\r\n    } catch (err) {}\r\n  }, [])\r\n\r\n  const handleSubmit = () => {}\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-6 space-y-4\">\r\n        <p className=\"sub-title\">Configuring Google Authenticator or Authy</p>\r\n        <div className=\"content\">\r\n          <li>\r\n            Install Google Authenticator (IOS - Android) or Authy (IOS -\r\n            Android).\r\n          </li>\r\n          <li>In the authenticator app, select \"+\" icon.</li>\r\n          <li>\r\n            Select \"Scan a barcode (or QR code)\" and use the phone's camera to\r\n            scan this barcode.\r\n          </li>\r\n        </div>\r\n        <div>\r\n          <p style={{ fontSize: 14, fontWeight: 600, marginTop: 20 }}>\r\n            Scan QR Code\r\n          </p>\r\n          <div className=\"flex justify-center\">\r\n            <img\r\n              className=\"block w-64 h-64 object-contain\"\r\n              src={qrcodeUrl}\r\n              alt=\"qrcode url\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <p className=\"sub-title\">Or Enter Code Into Your App</p>\r\n          <p className=\"text-sm\">SecretKey: {props?.base32} (Base32 encoded)</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"sub-title\">Verify Code</p>\r\n          <p className=\"content\">\r\n            For changing the setting, please verify the authentication code:\r\n          </p>\r\n        </div>\r\n        <Form onFinish={onFinish} onFinishFailed={() => {}} autoComplete=\"off\">\r\n          <Form.Item\r\n            label=\"Authentication code\"\r\n            name=\"token\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your authen code!\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Saved.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\FollowBtn.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Follower.js",["540","541","542","543"],"import React, { useEffect, useState } from \"react\"\r\nimport { Avatar, Typography, Card, Divider, Tooltip, Modal } from \"antd\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { getFollowersApi } from \"../../../api/user\"\r\nimport UserCard from \"../../../components/UserCard\"\r\nimport FollowBtn from \"../../../components/FollowBtn\"\r\nexport default function Follower() {\r\n  const { id } = useParams()\r\n  const [followers, setFollower] = useState([])\r\n  const [openFollowerModel, setOpenFollowerModel] = useState(false)\r\n  const { auth } = useSelector((state) => state)\r\n  const navigate = useNavigate()\r\n\r\n  const getFollowers = async () => {\r\n    const response = await getFollowersApi(id)\r\n    const { data, status } = response\r\n    if (status == 200) setFollower(data.followers)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFollowers()\r\n  }, [id])\r\n\r\n  const handleOk = () => {\r\n    setOpenFollowerModel(false)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setOpenFollowerModel(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        title={\"Click to view all followers\"}\r\n        style={{\r\n          cursor: \"pointer\",\r\n          color: \"teal\",\r\n          fontWeight: 600,\r\n          fontSize: 18,\r\n          marginBottom: 10\r\n        }}\r\n        onClick={() => {\r\n          setOpenFollowerModel(true)\r\n        }}\r\n      >\r\n        Follower:\r\n      </Typography>\r\n      <div>\r\n        {followers && followers.length === 0 && (\r\n          <p>This user don't have any follower</p>\r\n        )}\r\n        {followers &&\r\n          followers.map((val) => (\r\n            <Avatar.Group>\r\n              <Tooltip title={val.fullname} placement=\"top\">\r\n                <Avatar\r\n                  src={val.avatar}\r\n                  size={60}\r\n                  onClick={() => {\r\n                    navigate(\"/profile/\" + val._id)\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n            </Avatar.Group>\r\n          ))}\r\n      </div>\r\n      <Modal\r\n        title={\r\n          <React.Fragment>\r\n            <div style={{ textAlign: \"center\", fontWeight: 600, fontSize: 20 }}>\r\n              Followers\r\n            </div>\r\n            <Divider></Divider>\r\n          </React.Fragment>\r\n        }\r\n        open={openFollowerModel}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        {followers.map((user) => (\r\n          <UserCard key={user?._id} user={user}>\r\n            {auth?.user?._id !== user?._id && <FollowBtn user={user} />}\r\n          </UserCard>\r\n        ))}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\Posts.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\pet\\PetProfile.js",["544"],"import React, { useState } from \"react\"\r\nimport PetCard from \"./PetCard\"\r\nimport { Button } from \"antd\"\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\"\r\nimport PetModalAdd from \"./PetModalAdd\"\r\n\r\nexport default function PetProfile() {\r\n  const [pets, setPets] = useState([\r\n    {\r\n      img: \"https://meonhapkhau.com/wp-content/uploads/2021/10/Gia-cho-Golden-bao-nhieu-mua-cho-golden-o-dau.jpg\",\r\n      name: \"Donny\",\r\n      description: \"Dog Golden\"\r\n    },\r\n    {\r\n      img: \"https://pethouse.com.vn/wp-content/uploads/2022/12/Ngoai-hinh-husky-768x1024-1-600x800.jpg\",\r\n      name: \"Tommy\",\r\n      description: \"Husky\"\r\n    },\r\n    {\r\n      img: \"https://nld.mediacdn.vn/2020/2/29/dui-dog-1582946893091786108496.jpg\",\r\n      name: \"Dúi\",\r\n      description: \"Dúi\"\r\n    }\r\n  ])\r\n\r\n  const [isAddPet, setIsAddPet] = useState(false)\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", justifyContent: \"flex-start\", gap: 40 }}>\r\n        {pets.slice(0, 2).map((val, index) => (\r\n          <PetCard {...val} key={index} />\r\n        ))}\r\n        <Button\r\n          style={{ width: 80, height: 80 }}\r\n          icon={<AiOutlinePlusCircle size={30} color=\"#b3e0dc\" />}\r\n          onClick={() => {\r\n            setIsAddPet(true)\r\n          }}\r\n        />\r\n      </div>\r\n      <PetModalAdd isAddPet={isAddPet} setIsAddPet={setIsAddPet} />\r\n      <p\r\n        style={{\r\n          textAlign: \"center\",\r\n          color: \"teal\",\r\n          fontWeight: 600,\r\n          cursor: \"pointer\"\r\n        }}\r\n      >\r\n        Xem toàn bộ thú cưng\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\api\\log.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\utils\\mediaShow.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\MsgDisplay.js",["545"],"import React from \"react\"\r\nimport Avatar from \"../Avatar\"\r\nimport { imageShow, videoShow } from \"../../utils/mediaShow\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { deleteMessages } from \"../../redux/actions/messageAction\"\r\nimport { Modal } from 'antd'\r\nimport Times from \"./Times\"\r\nimport { ExclamationCircleFilled } from '@ant-design/icons';\r\nimport { IoCall } from 'react-icons/io5'\r\nimport { FaVideo } from 'react-icons/fa'\r\n\r\nconst { confirm } = Modal;\r\nconst MsgDisplay = ({ user, msg, theme, data }) => {\r\n  const { auth } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleDeleteMessages = () => {\r\n    if (!data) return\r\n    confirm({\r\n      icon: <ExclamationCircleFilled />,\r\n      title: 'Do you want to delete this message?',\r\n      onOk() {\r\n        dispatch(deleteMessages({ msg, data, auth }));\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"chat_title\">\r\n        <Avatar src={user.avatar} size=\"small-avatar\" />\r\n        <span>{user.username}</span>\r\n      </div> */}\r\n\r\n      <div className=\"you_content\">\r\n        {user?._id === auth?.user?._id && (\r\n          <i\r\n            style={{ transform: 'translate(-6px,-10px)' }}\r\n            className=\"fas fa-trash\"\r\n            onClick={handleDeleteMessages}\r\n          />\r\n        )}\r\n\r\n        <div>\r\n          {msg.text && (\r\n            <div\r\n              className=\"chat_text\"\r\n              style={{ filter: theme ? \"invert(1)\" : \"invert(0)\" }}\r\n            >\r\n              {msg.text}\r\n            </div>\r\n          )}\r\n          {msg.media.map((item, index) => (\r\n            <div key={index}>\r\n              {item.url.match(/video/i)\r\n                ? videoShow(item.url, theme)\r\n                : imageShow(item.url, theme)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {msg.call && (\r\n          <button\r\n            className=\"btn d-flex align-items-center py-3\"\r\n            style={{ background: \"#eee\", borderRadius: \"10px\" }}\r\n          >\r\n            <span\r\n              className=\"material-icons font-weight-bold mr-1\"\r\n              style={{\r\n                fontSize: \"2.5rem\",\r\n                color: msg.call.times === 0 ? \"crimson\" : \"green\",\r\n                filter: theme ? \"invert(1)\" : \"invert(0)\"\r\n              }}\r\n            >\r\n              {msg.call.times === 0\r\n                ? msg.call.video\r\n                  ? <FaVideo style={{ margin: '0 10px 5px 5px' }}></FaVideo>\r\n                  : <IoCall style={{ margin: '0 10px 5px 5px' }}></IoCall>\r\n                : msg.call.video\r\n                  ? <FaVideo style={{ margin: '0 10px 5px 5px' }}></FaVideo>\r\n                  : <IoCall style={{ margin: '0 10px 5px 5px' }}></IoCall>}\r\n            </span>\r\n\r\n            <div className=\"text-left\">\r\n              <h6>{msg.call.video ? \"Video Call\" : \"Audio Call\"}</h6>\r\n              <small>\r\n                {msg.call.times > 0 ? (\r\n                  <Times total={msg.call.times} />\r\n                ) : (\r\n                  new Date(msg.createdAt).toLocaleTimeString()\r\n                )}\r\n              </small>\r\n            </div>\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"chat_time\">\r\n        {new Date(msg.createdAt).toLocaleString()}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MsgDisplay","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\Icons.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\post_card\\CardHeader.js",["546"],"import React, { useState, useEffect } from \"react\"\r\nimport { Avatar } from \"antd\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport moment from \"moment\"\r\nimport { GLOBALTYPES } from \"../../../redux/actions/globalTypes\"\r\nimport { deletePost } from \"../../../redux/actions/postAction\"\r\nimport { BASE_URL } from \"../../../utils/config\"\r\nimport { SlOptions } from \"react-icons/sl\"\r\nimport { Dropdown } from \"antd\"\r\nimport { CopyOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\"\r\nimport { Modal } from \"antd\"\r\nimport { DeleteFilled } from \"@ant-design/icons\"\r\n\r\nconst { confirm } = Modal\r\n\r\nconst CardHeader = ({ post }) => {\r\n  const { auth, socket } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const handleEditPost = () => {\r\n    dispatch({ type: GLOBALTYPES.STATUS, payload: { ...post, onEdit: true } })\r\n  }\r\n\r\n  const handleCopyLink = () => {\r\n    navigator.clipboard.writeText(`${BASE_URL}/post/${post._id}`)\r\n  }\r\n  const handleDeletePost = () => {\r\n    confirm({\r\n      title: \"Are you sure want to delete this post?\",\r\n      icon: <DeleteFilled />,\r\n      onOk() {\r\n        dispatch(deletePost({ post, auth, socket }))\r\n        return navigate(\"/\")\r\n      },\r\n      onCancel() {}\r\n    })\r\n  }\r\n\r\n  const [items, setItems] = useState([])\r\n  useEffect(() => {\r\n    if (auth.user._id === post.user._id) {\r\n      setItems([\r\n        {\r\n          key: \"1\",\r\n          label: (\r\n            <div onClick={handleEditPost}>\r\n              <EditOutlined\r\n                style={{ transform: \"translateY(-4px)\", marginRight: \"6px\" }}\r\n              />{\" \"}\r\n              <span style={{ fontWeight: \"600\" }}>Edit</span>\r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          key: \"2\",\r\n          label: (\r\n            <div onClick={handleDeletePost}>\r\n              <DeleteOutlined\r\n                style={{ transform: \"translateY(-4px)\", marginRight: \"6px\" }}\r\n              />{\" \"}\r\n              <span style={{ fontWeight: \"600\" }}>Delete</span>\r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          key: \"3\",\r\n          label: (\r\n            <div onClick={handleCopyLink}>\r\n              <CopyOutlined\r\n                style={{ transform: \"translateY(-4px)\", marginRight: \"6px\" }}\r\n              />{\" \"}\r\n              <span style={{ fontWeight: \"600\" }}>Copy</span>\r\n            </div>\r\n          )\r\n        }\r\n      ])\r\n    } else {\r\n      setItems([\r\n        {\r\n          key: \"3\",\r\n          label: (\r\n            <div onClick={handleCopyLink}>\r\n              <CopyOutlined\r\n                style={{ transform: \"translateY(-4px)\", marginRight: \"6px\" }}\r\n              />{\" \"}\r\n              <span style={{ fontWeight: \"600\" }}>Copy</span>\r\n            </div>\r\n          )\r\n        }\r\n      ])\r\n    }\r\n  }, [post.user._id, auth.user._id])\r\n\r\n  return (\r\n    <div className=\"card_header\">\r\n      <div className=\"d-flex\">\r\n        <Avatar\r\n          style={{\r\n            backgroundColor: \"#f56a00\",\r\n            verticalAlign: \"middle\",\r\n            marginRight: \"5px\"\r\n          }}\r\n          src={\r\n            post?.user?.avatar ===\r\n            \"https://res.cloudinary.com/devatchannel/image/upload/v1602752402/avatar/avatar_cugq40.png\"\r\n              ? null\r\n              : post?.user?.avatar\r\n          }\r\n          size=\"large\"\r\n        >\r\n          {post?.user?.username[0]?.toUpperCase()}\r\n        </Avatar>\r\n        <div className=\"card_name\">\r\n          <h6 className=\"m-0\">\r\n            <Link to={`/profile/${post.user._id}`} className=\"text-dark\">\r\n              {post.user.fullname}\r\n            </Link>\r\n          </h6>\r\n          <small className=\"text-muted\">\r\n            {moment(post.createdAt).fromNow()}\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-item dropdown\">\r\n        <Dropdown\r\n          menu={{ items }}\r\n          placement=\"bottomRight\"\r\n          arrow={{ pointAtCenter: true }}\r\n        >\r\n          <SlOptions />\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardHeader\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\comments\\CommentDisplay.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\PostThumb.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\message\\Times.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\pet\\PetModalAdd.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\profile\\components\\pet\\PetCard.js",["547"],"import Typography from \"antd/es/typography/Typography\"\r\nimport React from \"react\"\r\n\r\nexport default function PetCard({ img, name, description }) {\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <img\r\n        src={img}\r\n        style={{ width: 80, height: 80, marginBottom: 10, borderRadius: 10 }}\r\n      />\r\n      <Typography style={{ fontWeight: 600 }}>{name}</Typography>\r\n      <p>{description}</p>\r\n    </div>\r\n  )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\utils\\config.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\api\\pet.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\comments\\CommentCard.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\redux\\actions\\commentAction.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\home\\comments\\CommentMenu.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\LikeButton.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\ShareModal.js",[],"C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\chatGpt.js",["548"],"import { FloatButton, Popconfirm, Popover } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { BiBot } from 'react-icons/bi'\r\nimport Gpt from './gpt/gpt'\r\n\r\nexport default function ChatGpt() {\r\n    const [open, setOpen] = useState(false)\r\n    const handleOpenChange1 = (newOpen) => {\r\n        setOpen(newOpen)\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            className=\"popover-notify\"\r\n            onOpenChange={handleOpenChange1}\r\n            placement=\"leftBottom\"\r\n            content={<Gpt></Gpt>}\r\n            trigger=\"click\"\r\n            open={open}\r\n        >\r\n            <FloatButton\r\n                icon={<BiBot style={{ fontSize: ' 1.6rem', transform: 'translateX(-4px)' }} />}\r\n                shape=\"circle\"\r\n                badge={{ dot: true }}\r\n                style={{ right: 40, height: 50, width: 50 }}\r\n            >\r\n            </FloatButton>\r\n        </Popover>\r\n\r\n\r\n    )\r\n}\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\pages\\gpt\\gpt.js",["549","550","551","552"],"import { ClearOutlined, ReloadOutlined, SendOutlined } from '@ant-design/icons'\r\nimport { Affix, Button, Col, Divider, Input, Row, message } from 'antd'\r\nimport { useCallback, useEffect, useRef, useState } from 'react'\r\nimport ChatGPTIcon from '../../assets/images/chatgpt.png'\r\nimport './index.scss'\r\nimport axios from 'axios'\r\nimport { EventSourcePolyfill } from 'event-source-polyfill'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst Gpt = () => {\r\n    const chatRef = useRef(null)\r\n    const [messages, setMessages] = useState([])\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [isReplying, setIsReplying] = useState(false)\r\n    const suggestedMessages = [\"Thú cưng là gì?\", \"Có bao nhiêu loại thú cưng?\"]\r\n    const { auth } = useSelector((state) => state)\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value)\r\n    }\r\n\r\n    const handleSendMessage = async () => {\r\n        if (inputValue === \"\") {\r\n            message.warning(\"Please input something\")\r\n\r\n            return\r\n        }\r\n        const newMessage = {\r\n            content: inputValue,\r\n            role: 'user',\r\n        }\r\n        const newReplyMessage = {\r\n            content: '',\r\n            role: 'assistant'\r\n        }\r\n        setMessages([...messages, newMessage, newReplyMessage])\r\n        setIsReplying(true)\r\n\r\n        setInputValue('')\r\n        const sse = new EventSourcePolyfill(\r\n            `http://localhost:5000/api/gpt?message=${inputValue}`,\r\n            {\r\n                headers: { Authorization: auth.token }\r\n            }\r\n        )\r\n\r\n        sse.onmessage = (event) => {\r\n            newReplyMessage.content += event.data\r\n            setMessages([...messages, newMessage, newReplyMessage])\r\n        }\r\n\r\n        sse.onerror = (event) => {\r\n            setIsReplying(false)\r\n            sse.close()\r\n        }\r\n    }\r\n\r\n    // const handleSendMessage = async () => {\r\n    //     if (inputValue === \"\") {\r\n    //         message.warning(\"Please input something\")\r\n\r\n    //         return\r\n    //     }\r\n    //     const newMessage = {\r\n    //         content: inputValue,\r\n    //         role: 'user',\r\n    //     }\r\n    //     const newReplyMessage = {\r\n    //         content: '',\r\n    //         role: 'assistant'\r\n    //     }\r\n    //     setMessages([...messages, newMessage, newReplyMessage])\r\n    //     setIsReplying(true)\r\n\r\n    //     setInputValue('')\r\n\r\n\r\n    //     await axios.post(`http://localhost:5000/api/gpt`, { message: inputValue })\r\n    //         .then(res => {\r\n    //             const newReplyMessage = {\r\n    //                 content: res.data.reply,\r\n    //                 role: 'assistant'\r\n    //             }\r\n    //             setMessages([...messages, newMessage, newReplyMessage])\r\n    //             setIsReplying(false)\r\n    //         })\r\n    //         .catch(err => {\r\n    //             setIsReplying(false)\r\n    //             message.error(err.message)\r\n    //         })\r\n\r\n    // }\r\n\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.keyCode === 13 && !e.shiftKey) {\r\n            e.preventDefault()\r\n            handleSendMessage()\r\n        }\r\n    }\r\n\r\n    const handleSendSuggestedMessage = async (suggestedMessage) => {\r\n        const newMessage = {\r\n            content: suggestedMessage,\r\n            role: 'user',\r\n        }\r\n        const newReplyMessage = {\r\n            content: '',\r\n            role: 'assistant'\r\n        }\r\n        setMessages([...messages, newMessage, newReplyMessage])\r\n        setIsReplying(true)\r\n\r\n        setInputValue('')\r\n\r\n        const sse = new EventSourcePolyfill(\r\n            `http://localhost:5000/api/gpt?message=${suggestedMessage}`,\r\n            {\r\n                headers: { Authorization: auth.token }\r\n            }\r\n        )\r\n\r\n        sse.onmessage = (event) => {\r\n            newReplyMessage.content += event.data\r\n            setMessages([...messages, newMessage, newReplyMessage])\r\n        }\r\n\r\n        sse.onerror = (event) => {\r\n            message.error(event.statusText)\r\n            setIsReplying(false)\r\n            sse.close()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ width: \"400px\", height: \"600px\" }}>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignContent: 'center',\r\n                    justifyContent: 'center',\r\n                    gap: '10px',\r\n                    padding: '10px',\r\n                    borderBottom: \"1px solid rgb(235, 235, 240)\"\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        alignContent: 'center',\r\n                        justifyContent: 'center',\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={ChatGPTIcon}\r\n                        alt=\"\"\r\n                        style={{ width: '33px', height: '33px', margin: 0 }}\r\n                    />\r\n                </div>\r\n                <div style={{ fontWeight: \"bold\", fontSize: \"1.2rem\" }}>PetLove ChatGPT</div>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    marginTop: 10,\r\n                    height: 'calc(100% - 130px)',\r\n                    overflowY: 'scroll',\r\n                    paddingBottom: 10,\r\n                }}\r\n                ref={chatRef}\r\n            >\r\n                {messages.length === 0 && (\r\n                    <>\r\n                        <div\r\n                            style={{\r\n                                margin: '20px',\r\n                            }}\r\n                        >\r\n                            Hãy thử hỏi tôi\r\n                        </div>\r\n                        <div\r\n                            style={{\r\n                                margin: '20px',\r\n                            }}\r\n                        >\r\n                            {suggestedMessages?.map((message, index) => (\r\n                                <Button\r\n                                    key={index}\r\n                                    onClick={() => {\r\n                                        handleSendSuggestedMessage(message)\r\n                                    }}\r\n                                    style={{\r\n                                        margin: '5px',\r\n                                    }}\r\n                                >\r\n                                    {message}\r\n                                </Button>\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {\r\n                    messages && messages?.map((message, index) => (\r\n                        <div key={index}>\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection:\r\n                                        message.role === 'user' ? 'row-reverse' : 'row',\r\n                                    justifyContent: 'flex-start',\r\n                                    marginBottom: '10px',\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor:\r\n                                            message.role === 'user' ? '#1890ff' : '#f1f2f2',\r\n                                        color: message.role === 'user' ? '#fff' : '#000',\r\n                                        borderRadius: '12px',\r\n                                        padding: '10px',\r\n                                        maxWidth: '80%',\r\n                                    }}\r\n                                >\r\n                                    {message.content !== '' ? (\r\n                                        <p\r\n                                            style={{\r\n                                                margin: 0,\r\n                                                overflowWrap: 'break-word',\r\n                                                whiteSpace: 'pre-line',\r\n                                            }}\r\n                                        >\r\n                                            {message.content}\r\n                                        </p>\r\n                                    ) : (\r\n                                        <p style={{ margin: 0 }} className=\"loading\">\r\n                                            ...\r\n                                        </p>\r\n                                    )}\r\n                                    {message.role === 'assistant' &&\r\n                                        !isReplying &&\r\n                                        message.content !== '' &&\r\n                                        index === messages.length - 1 && (\r\n                                            <Button\r\n\r\n                                                style={{\r\n                                                    float: 'right',\r\n                                                    marginTop: '5px',\r\n                                                }}\r\n                                            >\r\n                                                <ReloadOutlined />\r\n                                                Regenerate\r\n                                            </Button>\r\n                                        )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <Affix\r\n                offsetBottom={0}\r\n\r\n            >\r\n                <Row style={{ padding: '5px' }}>\r\n                    <Col\r\n                        span={2}\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            style={{\r\n                                backgroundColor: 'none',\r\n                                border: 'none',\r\n                            }}\r\n                            shape=\"circle\"\r\n                            disabled={\r\n                                isReplying ||\r\n                                messages?.at(-1)?.content === '' ||\r\n                                messages?.length === 0\r\n                            }\r\n                        >\r\n                            <ClearOutlined style={{ fontSize: '20px', color: '#2980b9', transform: \"translateY(-2px)\" }} />\r\n                        </Button>\r\n                    </Col>\r\n                    <Col offset={1} span={21}>\r\n                        <div>\r\n                            <Input.TextArea\r\n                                autoSize={{ minRows: 2, maxRows: 15 }}\r\n                                style={{\r\n                                    borderRadius: '12px',\r\n                                    height: '50px',\r\n                                    paddingRight: '50px',\r\n                                }}\r\n                                value={inputValue}\r\n                                onChange={handleInputChange}\r\n                                onKeyDown={handleKeyDown}\r\n                                placeholder=\"Type a message...\"\r\n                            />\r\n                            <Button\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: '10px',\r\n                                    bottom: '10px',\r\n                                }}\r\n                                type=\"primary\"\r\n                                shape=\"circle\"\r\n                                onClick={handleSendMessage}\r\n                            >\r\n                                <SendOutlined style={{ transform: \"translateY(-3px)\" }} />\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Affix>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gpt\r\n","C:\\TAPTAP\\UIT\\Khóa luận\\pet-social-network-fe\\src\\components\\StatusModal.js",[],{"ruleId":"553","replacedBy":"554"},{"ruleId":"555","replacedBy":"556"},{"ruleId":"557","severity":1,"message":"558","line":4,"column":3,"nodeType":"559","messageId":"560","endLine":4,"endColumn":16},{"ruleId":"557","severity":1,"message":"561","line":5,"column":3,"nodeType":"559","messageId":"560","endLine":5,"endColumn":11},{"ruleId":"557","severity":1,"message":"562","line":7,"column":3,"nodeType":"559","messageId":"560","endLine":7,"endColumn":9},{"ruleId":"557","severity":1,"message":"563","line":10,"column":3,"nodeType":"559","messageId":"560","endLine":10,"endColumn":14},{"ruleId":"557","severity":1,"message":"564","line":11,"column":3,"nodeType":"559","messageId":"560","endLine":11,"endColumn":12},{"ruleId":"557","severity":1,"message":"565","line":30,"column":17,"nodeType":"559","messageId":"560","endLine":30,"endColumn":23},{"ruleId":"557","severity":1,"message":"566","line":30,"column":25,"nodeType":"559","messageId":"560","endLine":30,"endColumn":30},{"ruleId":"557","severity":1,"message":"567","line":7,"column":10,"nodeType":"559","messageId":"560","endLine":7,"endColumn":20},{"ruleId":"557","severity":1,"message":"568","line":7,"column":30,"nodeType":"559","messageId":"560","endLine":7,"endColumn":35},{"ruleId":"557","severity":1,"message":"569","line":1,"column":17,"nodeType":"559","messageId":"560","endLine":1,"endColumn":26},{"ruleId":"557","severity":1,"message":"570","line":2,"column":23,"nodeType":"559","messageId":"560","endLine":2,"endColumn":34},{"ruleId":"557","severity":1,"message":"571","line":4,"column":10,"nodeType":"559","messageId":"560","endLine":4,"endColumn":21},{"ruleId":"557","severity":1,"message":"572","line":5,"column":10,"nodeType":"559","messageId":"560","endLine":5,"endColumn":14},{"ruleId":"557","severity":1,"message":"573","line":5,"column":23,"nodeType":"559","messageId":"560","endLine":5,"endColumn":29},{"ruleId":"557","severity":1,"message":"574","line":18,"column":17,"nodeType":"559","messageId":"560","endLine":18,"endColumn":22},{"ruleId":"557","severity":1,"message":"575","line":19,"column":9,"nodeType":"559","messageId":"560","endLine":19,"endColumn":17},{"ruleId":"557","severity":1,"message":"576","line":21,"column":20,"nodeType":"559","messageId":"560","endLine":21,"endColumn":31},{"ruleId":"557","severity":1,"message":"577","line":22,"column":11,"nodeType":"559","messageId":"560","endLine":22,"endColumn":19},{"ruleId":"557","severity":1,"message":"578","line":22,"column":21,"nodeType":"559","messageId":"560","endLine":22,"endColumn":29},{"ruleId":"557","severity":1,"message":"579","line":22,"column":31,"nodeType":"559","messageId":"560","endLine":22,"endColumn":36},{"ruleId":"557","severity":1,"message":"580","line":22,"column":38,"nodeType":"559","messageId":"560","endLine":22,"endColumn":46},{"ruleId":"557","severity":1,"message":"581","line":22,"column":48,"nodeType":"559","messageId":"560","endLine":22,"endColumn":59},{"ruleId":"557","severity":1,"message":"582","line":23,"column":10,"nodeType":"559","messageId":"560","endLine":23,"endColumn":18},{"ruleId":"557","severity":1,"message":"583","line":23,"column":20,"nodeType":"559","messageId":"560","endLine":23,"endColumn":31},{"ruleId":"557","severity":1,"message":"584","line":24,"column":10,"nodeType":"559","messageId":"560","endLine":24,"endColumn":20},{"ruleId":"557","severity":1,"message":"585","line":24,"column":22,"nodeType":"559","messageId":"560","endLine":24,"endColumn":35},{"ruleId":"586","severity":1,"message":"587","line":30,"column":6,"nodeType":"588","endLine":30,"endColumn":8,"suggestions":"589"},{"ruleId":"557","severity":1,"message":"590","line":3,"column":3,"nodeType":"559","messageId":"560","endLine":3,"endColumn":15},{"ruleId":"557","severity":1,"message":"591","line":4,"column":3,"nodeType":"559","messageId":"560","endLine":4,"endColumn":19},{"ruleId":"557","severity":1,"message":"592","line":7,"column":3,"nodeType":"559","messageId":"560","endLine":7,"endColumn":16},{"ruleId":"557","severity":1,"message":"593","line":8,"column":3,"nodeType":"559","messageId":"560","endLine":8,"endColumn":17},{"ruleId":"557","severity":1,"message":"594","line":10,"column":3,"nodeType":"559","messageId":"560","endLine":10,"endColumn":22},{"ruleId":"557","severity":1,"message":"595","line":11,"column":3,"nodeType":"559","messageId":"560","endLine":11,"endColumn":22},{"ruleId":"557","severity":1,"message":"596","line":12,"column":3,"nodeType":"559","messageId":"560","endLine":12,"endColumn":21},{"ruleId":"557","severity":1,"message":"597","line":13,"column":3,"nodeType":"559","messageId":"560","endLine":13,"endColumn":18},{"ruleId":"557","severity":1,"message":"598","line":14,"column":3,"nodeType":"559","messageId":"560","endLine":14,"endColumn":17},{"ruleId":"557","severity":1,"message":"599","line":15,"column":3,"nodeType":"559","messageId":"560","endLine":15,"endColumn":19},{"ruleId":"557","severity":1,"message":"600","line":18,"column":24,"nodeType":"559","messageId":"560","endLine":18,"endColumn":28},{"ruleId":"557","severity":1,"message":"601","line":23,"column":24,"nodeType":"559","messageId":"560","endLine":23,"endColumn":31},{"ruleId":"557","severity":1,"message":"602","line":45,"column":21,"nodeType":"559","messageId":"560","endLine":45,"endColumn":33},{"ruleId":"557","severity":1,"message":"603","line":46,"column":25,"nodeType":"559","messageId":"560","endLine":46,"endColumn":41},{"ruleId":"557","severity":1,"message":"575","line":10,"column":9,"nodeType":"559","messageId":"560","endLine":10,"endColumn":17},{"ruleId":"557","severity":1,"message":"604","line":11,"column":11,"nodeType":"559","messageId":"560","endLine":11,"endColumn":15},{"ruleId":"557","severity":1,"message":"605","line":14,"column":10,"nodeType":"559","messageId":"560","endLine":14,"endColumn":17},{"ruleId":"557","severity":1,"message":"606","line":14,"column":19,"nodeType":"559","messageId":"560","endLine":14,"endColumn":29},{"ruleId":"557","severity":1,"message":"607","line":16,"column":8,"nodeType":"559","messageId":"560","endLine":16,"endColumn":16},{"ruleId":"557","severity":1,"message":"571","line":5,"column":10,"nodeType":"559","messageId":"560","endLine":5,"endColumn":21},{"ruleId":"557","severity":1,"message":"608","line":6,"column":10,"nodeType":"559","messageId":"560","endLine":6,"endColumn":14},{"ruleId":"557","severity":1,"message":"609","line":8,"column":8,"nodeType":"559","messageId":"560","endLine":8,"endColumn":15},{"ruleId":"610","severity":1,"message":"611","line":28,"column":29,"nodeType":"612","messageId":"613","endLine":28,"endColumn":40},{"ruleId":"557","severity":1,"message":"569","line":1,"column":17,"nodeType":"559","messageId":"560","endLine":1,"endColumn":26},{"ruleId":"557","severity":1,"message":"614","line":4,"column":16,"nodeType":"559","messageId":"560","endLine":4,"endColumn":26},{"ruleId":"557","severity":1,"message":"600","line":1,"column":10,"nodeType":"559","messageId":"560","endLine":1,"endColumn":14},{"ruleId":"557","severity":1,"message":"615","line":3,"column":10,"nodeType":"559","messageId":"560","endLine":3,"endColumn":17},{"ruleId":"557","severity":1,"message":"616","line":10,"column":10,"nodeType":"559","messageId":"560","endLine":10,"endColumn":24},{"ruleId":"557","severity":1,"message":"565","line":9,"column":19,"nodeType":"559","messageId":"560","endLine":9,"endColumn":25},{"ruleId":"557","severity":1,"message":"617","line":11,"column":9,"nodeType":"559","messageId":"560","endLine":11,"endColumn":17},{"ruleId":"557","severity":1,"message":"565","line":13,"column":17,"nodeType":"559","messageId":"560","endLine":13,"endColumn":23},{"ruleId":"557","severity":1,"message":"566","line":13,"column":25,"nodeType":"559","messageId":"560","endLine":13,"endColumn":30},{"ruleId":"557","severity":1,"message":"618","line":13,"column":32,"nodeType":"559","messageId":"560","endLine":13,"endColumn":36},{"ruleId":"557","severity":1,"message":"600","line":2,"column":30,"nodeType":"559","messageId":"560","endLine":2,"endColumn":34},{"ruleId":"557","severity":1,"message":"570","line":3,"column":23,"nodeType":"559","messageId":"560","endLine":3,"endColumn":34},{"ruleId":"586","severity":1,"message":"619","line":27,"column":6,"nodeType":"588","endLine":27,"endColumn":10,"suggestions":"620"},{"ruleId":"557","severity":1,"message":"621","line":2,"column":10,"nodeType":"559","messageId":"560","endLine":2,"endColumn":16},{"ruleId":"557","severity":1,"message":"622","line":2,"column":36,"nodeType":"559","messageId":"560","endLine":2,"endColumn":43},{"ruleId":"557","severity":1,"message":"623","line":2,"column":45,"nodeType":"559","messageId":"560","endLine":2,"endColumn":52},{"ruleId":"557","severity":1,"message":"624","line":2,"column":62,"nodeType":"559","messageId":"560","endLine":2,"endColumn":67},{"ruleId":"557","severity":1,"message":"571","line":3,"column":10,"nodeType":"559","messageId":"560","endLine":3,"endColumn":21},{"ruleId":"557","severity":1,"message":"565","line":22,"column":19,"nodeType":"559","messageId":"560","endLine":22,"endColumn":25},{"ruleId":"586","severity":1,"message":"625","line":31,"column":6,"nodeType":"588","endLine":31,"endColumn":23,"suggestions":"626"},{"ruleId":"553","replacedBy":"627"},{"ruleId":"555","replacedBy":"628"},{"ruleId":"557","severity":1,"message":"569","line":1,"column":17,"nodeType":"559","messageId":"560","endLine":1,"endColumn":26},{"ruleId":"557","severity":1,"message":"629","line":4,"column":30,"nodeType":"559","messageId":"560","endLine":4,"endColumn":36},{"ruleId":"586","severity":1,"message":"630","line":20,"column":6,"nodeType":"588","endLine":20,"endColumn":8,"suggestions":"631"},{"ruleId":"557","severity":1,"message":"632","line":1,"column":10,"nodeType":"559","messageId":"560","endLine":1,"endColumn":12},{"ruleId":"557","severity":1,"message":"633","line":3,"column":10,"nodeType":"559","messageId":"560","endLine":3,"endColumn":20},{"ruleId":"557","severity":1,"message":"565","line":11,"column":17,"nodeType":"559","messageId":"560","endLine":11,"endColumn":23},{"ruleId":"557","severity":1,"message":"566","line":11,"column":25,"nodeType":"559","messageId":"560","endLine":11,"endColumn":30},{"ruleId":"557","severity":1,"message":"618","line":11,"column":32,"nodeType":"559","messageId":"560","endLine":11,"endColumn":36},{"ruleId":"557","severity":1,"message":"634","line":13,"column":10,"nodeType":"559","messageId":"560","endLine":13,"endColumn":16},{"ruleId":"557","severity":1,"message":"635","line":13,"column":18,"nodeType":"559","messageId":"560","endLine":13,"endColumn":27},{"ruleId":"557","severity":1,"message":"636","line":14,"column":10,"nodeType":"559","messageId":"560","endLine":14,"endColumn":14},{"ruleId":"557","severity":1,"message":"637","line":43,"column":9,"nodeType":"559","messageId":"560","endLine":43,"endColumn":24},{"ruleId":"586","severity":1,"message":"638","line":55,"column":6,"nodeType":"588","endLine":55,"endColumn":8,"suggestions":"639"},{"ruleId":"557","severity":1,"message":"640","line":57,"column":9,"nodeType":"559","messageId":"560","endLine":57,"endColumn":21},{"ruleId":"557","severity":1,"message":"600","line":2,"column":30,"nodeType":"559","messageId":"560","endLine":2,"endColumn":34},{"ruleId":"557","severity":1,"message":"570","line":3,"column":23,"nodeType":"559","messageId":"560","endLine":3,"endColumn":34},{"ruleId":"641","severity":1,"message":"642","line":18,"column":16,"nodeType":"643","messageId":"613","endLine":18,"endColumn":18},{"ruleId":"586","severity":1,"message":"644","line":23,"column":6,"nodeType":"588","endLine":23,"endColumn":10,"suggestions":"645"},{"ruleId":"557","severity":1,"message":"646","line":8,"column":16,"nodeType":"559","messageId":"560","endLine":8,"endColumn":23},{"ruleId":"557","severity":1,"message":"621","line":2,"column":8,"nodeType":"559","messageId":"560","endLine":2,"endColumn":14},{"ruleId":"586","severity":1,"message":"647","line":94,"column":6,"nodeType":"588","endLine":94,"endColumn":36,"suggestions":"648"},{"ruleId":"649","severity":1,"message":"650","line":7,"column":7,"nodeType":"651","endLine":10,"endColumn":9},{"ruleId":"557","severity":1,"message":"652","line":1,"column":23,"nodeType":"559","messageId":"560","endLine":1,"endColumn":33},{"ruleId":"557","severity":1,"message":"622","line":2,"column":30,"nodeType":"559","messageId":"560","endLine":2,"endColumn":37},{"ruleId":"557","severity":1,"message":"653","line":3,"column":10,"nodeType":"559","messageId":"560","endLine":3,"endColumn":21},{"ruleId":"557","severity":1,"message":"569","line":3,"column":23,"nodeType":"559","messageId":"560","endLine":3,"endColumn":32},{"ruleId":"557","severity":1,"message":"654","line":6,"column":8,"nodeType":"559","messageId":"560","endLine":6,"endColumn":13},"no-native-reassign",["655"],"no-negated-in-lhs",["656"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'Router' is defined but never used.","'useNavigate' is defined but never used.","'useRoutes' is defined but never used.","'status' is assigned a value but never used.","'modal' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'theme' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'GLOBALTYPES' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'alert' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'fullname' is assigned a value but never used.","'username' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'cf_password' is assigned a value but never used.","'typePass' is assigned a value but never used.","'setTypePass' is assigned a value but never used.","'typeCfPass' is assigned a value but never used.","'setTypeCfPass' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["657"],"'BulbOutlined' is defined but never used.","'DatabaseOutlined' is defined but never used.","'RobotOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'TransactionOutlined' is defined but never used.","'CalculatorOutlined' is defined but never used.","'BarcodeOutlined' is defined but never used.","'FolderOutlined' is defined but never used.","'FolderAddTwoTone' is defined but never used.","'Card' is defined but never used.","'Content' is assigned a value but never used.","'setShowArrow' is assigned a value but never used.","'setArrowAtCenter' is assigned a value but never used.","'auth' is assigned a value but never used.","'saveTab' is assigned a value but never used.","'setSaveTab' is assigned a value but never used.","'LoadIcon' is defined but never used.","'Link' is defined but never used.","'BotCard' is defined but never used.","no-dupe-keys","Duplicate key 'marginRight'.","ObjectExpression","unexpected","'useHistory' is defined but never used.","'SiAuth0' is defined but never used.","'currentSetting' is assigned a value but never used.","'navigate' is assigned a value but never used.","'call' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFollowings'. Either include it or remove the dependency array.",["658"],"'Avatar' is defined but never used.","'Divider' is defined but never used.","'Tooltip' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserId'. Either include it or remove the dependency array.",["659"],["655"],["656"],"'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'form' and 'userInfo'. Either include them or remove the dependency array.",["660"],"'FC' is defined but never used.","'Typography' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'form' is assigned a value but never used.","'onSubmitHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.otpauth_url'. Either include it or remove the dependency array.",["661"],"'handleSubmit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'getFollowers'. Either include it or remove the dependency array.",["662"],"'setPets' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleCopyLink', 'handleDeletePost', and 'handleEditPost'. Either include them or remove the dependency array.",["663"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Popconfirm' is defined but never used.","'useCallback' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},"Update the dependencies array to be: [form]",{"range":"678","text":"679"},"Update the dependencies array to be: [getFollowings, id]",{"range":"680","text":"681"},"Update the dependencies array to be: [id, currentUser, getUserId]",{"range":"682","text":"683"},"Update the dependencies array to be: [form, userInfo]",{"range":"684","text":"685"},"Update the dependencies array to be: [props.otpauth_url]",{"range":"686","text":"687"},"Update the dependencies array to be: [getFollowers, id]",{"range":"688","text":"689"},"Update the dependencies array to be: [post.user._id, auth.user._id, handleEditPost, handleDeletePost, handleCopyLink]",{"range":"690","text":"691"},[971,973],"[form]",[1062,1066],"[getFollowings, id]",[1103,1120],"[id, currentUser, getUserId]",[924,926],"[form, userInfo]",[1691,1693],"[props.otpauth_url]",[904,908],"[getFollowers, id]",[2878,2908],"[post.user._id, auth.user._id, handleEditPost, handleDeletePost, handleCopyLink]"]